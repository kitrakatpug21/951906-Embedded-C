
Calculator Intf.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b1c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000b90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  00000b90  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ec0  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c3  00000000  00000000  00001b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000699  00000000  00000000  000021eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000080  00000000  00000000  00002884  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000038e  00000000  00000000  00002904  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ba  00000000  00000000  00002c92  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000364c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	4e 41       	sbci	r20, 0x1E	; 30
  56:	4e 49       	Address 0x00000056 is out of bounds.
.word	0xffff	; ????

00000057 <pstr_inity>:
  57:	49 4e 49 54 59                                      INITY

0000005c <pstr_inf>:
  5c:	49 4e 46                                            INF

0000005f <pwr_m10>:
  5f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
  6f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000077 <pwr_p10>:
  77:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
  87:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf e5       	ldi	r28, 0x5F	; 95
  96:	d4 e0       	ldi	r29, 0x04	; 4
  98:	de bf       	out	0x3e, r29	; 62
  9a:	cd bf       	out	0x3d, r28	; 61

0000009c <__do_clear_bss>:
  9c:	20 e0       	ldi	r18, 0x00	; 0
  9e:	a0 e6       	ldi	r26, 0x60	; 96
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
  a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
  a6:	a2 36       	cpi	r26, 0x62	; 98
  a8:	b2 07       	cpc	r27, r18
  aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
  ac:	0e 94 04 01 	call	0x208	; 0x208 <main>
  b0:	0c 94 8c 05 	jmp	0xb18	; 0xb18 <_exit>

000000b4 <__bad_interrupt>:
  b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <LCD_config>:

#define LCD_PORT PORTD
#define LCD_DDR  DDRD

void LCD_config(uint8_t cmd){
	LCD_PORT &= ~(0b00000001);// RS = 0
  b8:	92 b3       	in	r25, 0x12	; 18
  ba:	9e 7f       	andi	r25, 0xFE	; 254
  bc:	92 bb       	out	0x12, r25	; 18
	LCD_PORT = (LCD_PORT & 0x0F) | (cmd & 0xF0);
  be:	92 b3       	in	r25, 0x12	; 18
  c0:	9f 70       	andi	r25, 0x0F	; 15
  c2:	28 2f       	mov	r18, r24
  c4:	20 7f       	andi	r18, 0xF0	; 240
  c6:	92 2b       	or	r25, r18
  c8:	92 bb       	out	0x12, r25	; 18
	LCD_PORT |= (0b00000010); // EN = 1
  ca:	92 b3       	in	r25, 0x12	; 18
  cc:	92 60       	ori	r25, 0x02	; 2
  ce:	92 bb       	out	0x12, r25	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d0:	ef e1       	ldi	r30, 0x1F	; 31
  d2:	fe e4       	ldi	r31, 0x4E	; 78
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <LCD_config+0x1c>
  d8:	00 c0       	rjmp	.+0      	; 0xda <LCD_config+0x22>
  da:	00 00       	nop
	_delay_ms(10);
	LCD_PORT &= ~(0b00000010); // EN = 0
  dc:	92 b3       	in	r25, 0x12	; 18
  de:	9d 7f       	andi	r25, 0xFD	; 253
  e0:	92 bb       	out	0x12, r25	; 18
  e2:	ef e1       	ldi	r30, 0x1F	; 31
  e4:	fe e4       	ldi	r31, 0x4E	; 78
  e6:	31 97       	sbiw	r30, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <LCD_config+0x2e>
  ea:	00 c0       	rjmp	.+0      	; 0xec <LCD_config+0x34>
  ec:	00 00       	nop
	_delay_ms(10);
	// END OF UPPER NIBBLE (4bit) OF COMMAND
	LCD_PORT &= ~(0b00000001);// RS = 0
  ee:	92 b3       	in	r25, 0x12	; 18
  f0:	9e 7f       	andi	r25, 0xFE	; 254
  f2:	92 bb       	out	0x12, r25	; 18
	LCD_PORT = (LCD_PORT & 0x0F) | ((cmd<<4) & 0xF0);
  f4:	22 b3       	in	r18, 0x12	; 18
  f6:	f0 e1       	ldi	r31, 0x10	; 16
  f8:	8f 9f       	mul	r24, r31
  fa:	c0 01       	movw	r24, r0
  fc:	11 24       	eor	r1, r1
  fe:	92 2f       	mov	r25, r18
 100:	9f 70       	andi	r25, 0x0F	; 15
 102:	89 2b       	or	r24, r25
 104:	82 bb       	out	0x12, r24	; 18
	LCD_PORT |= (0b00000010); // EN = 1
 106:	82 b3       	in	r24, 0x12	; 18
 108:	82 60       	ori	r24, 0x02	; 2
 10a:	82 bb       	out	0x12, r24	; 18
 10c:	8f e1       	ldi	r24, 0x1F	; 31
 10e:	9e e4       	ldi	r25, 0x4E	; 78
 110:	01 97       	sbiw	r24, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <LCD_config+0x58>
 114:	00 c0       	rjmp	.+0      	; 0x116 <LCD_config+0x5e>
 116:	00 00       	nop
	_delay_ms(10);
	LCD_PORT &= ~(0b00000010); // EN = 0
 118:	82 b3       	in	r24, 0x12	; 18
 11a:	8d 7f       	andi	r24, 0xFD	; 253
 11c:	82 bb       	out	0x12, r24	; 18
 11e:	ef e1       	ldi	r30, 0x1F	; 31
 120:	fe e4       	ldi	r31, 0x4E	; 78
 122:	31 97       	sbiw	r30, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <LCD_config+0x6a>
 126:	00 c0       	rjmp	.+0      	; 0x128 <LCD_config+0x70>
 128:	00 00       	nop
 12a:	08 95       	ret

0000012c <LCD_char>:
	_delay_ms(10);
	// END OF LOWER NIBBLE (4bit) OF COMMAND
}
void LCD_char(char data){
	LCD_PORT |= (0b00000001);// RS = 1
 12c:	92 b3       	in	r25, 0x12	; 18
 12e:	91 60       	ori	r25, 0x01	; 1
 130:	92 bb       	out	0x12, r25	; 18
	LCD_PORT = (LCD_PORT & 0x0F) | (data & 0xF0);
 132:	92 b3       	in	r25, 0x12	; 18
 134:	9f 70       	andi	r25, 0x0F	; 15
 136:	28 2f       	mov	r18, r24
 138:	20 7f       	andi	r18, 0xF0	; 240
 13a:	92 2b       	or	r25, r18
 13c:	92 bb       	out	0x12, r25	; 18
	LCD_PORT |= (0b00000010); // EN = 1
 13e:	92 b3       	in	r25, 0x12	; 18
 140:	92 60       	ori	r25, 0x02	; 2
 142:	92 bb       	out	0x12, r25	; 18
 144:	ef e1       	ldi	r30, 0x1F	; 31
 146:	fe e4       	ldi	r31, 0x4E	; 78
 148:	31 97       	sbiw	r30, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <LCD_char+0x1c>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <LCD_char+0x22>
 14e:	00 00       	nop
	_delay_ms(10);
	LCD_PORT &= ~(0b00000010); // EN = 0
 150:	92 b3       	in	r25, 0x12	; 18
 152:	9d 7f       	andi	r25, 0xFD	; 253
 154:	92 bb       	out	0x12, r25	; 18
 156:	ef e1       	ldi	r30, 0x1F	; 31
 158:	fe e4       	ldi	r31, 0x4E	; 78
 15a:	31 97       	sbiw	r30, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <LCD_char+0x2e>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <LCD_char+0x34>
 160:	00 00       	nop
	_delay_ms(10);
	// END OF UPPER NIBBLE (4bit) OF DATA
	LCD_PORT |= (0b00000001);// RS = 1
 162:	92 b3       	in	r25, 0x12	; 18
 164:	91 60       	ori	r25, 0x01	; 1
 166:	92 bb       	out	0x12, r25	; 18
	LCD_PORT = (LCD_PORT & 0x0F) | ((data<<4) & 0xF0);
 168:	22 b3       	in	r18, 0x12	; 18
 16a:	f0 e1       	ldi	r31, 0x10	; 16
 16c:	8f 9f       	mul	r24, r31
 16e:	c0 01       	movw	r24, r0
 170:	11 24       	eor	r1, r1
 172:	92 2f       	mov	r25, r18
 174:	9f 70       	andi	r25, 0x0F	; 15
 176:	89 2b       	or	r24, r25
 178:	82 bb       	out	0x12, r24	; 18
	LCD_PORT |= (0b00000010); // EN = 1
 17a:	82 b3       	in	r24, 0x12	; 18
 17c:	82 60       	ori	r24, 0x02	; 2
 17e:	82 bb       	out	0x12, r24	; 18
 180:	8f e1       	ldi	r24, 0x1F	; 31
 182:	9e e4       	ldi	r25, 0x4E	; 78
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <LCD_char+0x58>
 188:	00 c0       	rjmp	.+0      	; 0x18a <LCD_char+0x5e>
 18a:	00 00       	nop
	_delay_ms(10);
	LCD_PORT &= ~(0b00000010); // EN = 0
 18c:	82 b3       	in	r24, 0x12	; 18
 18e:	8d 7f       	andi	r24, 0xFD	; 253
 190:	82 bb       	out	0x12, r24	; 18
 192:	ef e1       	ldi	r30, 0x1F	; 31
 194:	fe e4       	ldi	r31, 0x4E	; 78
 196:	31 97       	sbiw	r30, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <LCD_char+0x6a>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <LCD_char+0x70>
 19c:	00 00       	nop
 19e:	08 95       	ret

000001a0 <LCD_initiate>:
	_delay_ms(10);
	// END OF LOWER NIBBLE (4bit) OF DATA
}
void LCD_initiate(){
	LCD_DDR = 0b11110011;//Setup the DDR Register
 1a0:	83 ef       	ldi	r24, 0xF3	; 243
 1a2:	81 bb       	out	0x11, r24	; 17
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	82 e5       	ldi	r24, 0x52	; 82
 1a8:	97 e0       	ldi	r25, 0x07	; 7
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <LCD_initiate+0xa>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <LCD_initiate+0x14>
 1b4:	00 00       	nop
	_delay_ms(300);
	//LCD_config(0x38);// 8 bit mode
	LCD_config(0x33);LCD_config(0x32); // to sync the UPPER PORT OF LCDs and turn off LOWER PORT
 1b6:	83 e3       	ldi	r24, 0x33	; 51
 1b8:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
 1bc:	82 e3       	ldi	r24, 0x32	; 50
 1be:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
	LCD_config(0x28);// 4-bit 16 character 2 row mode
 1c2:	88 e2       	ldi	r24, 0x28	; 40
 1c4:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
	LCD_config(0x0C);
 1c8:	8c e0       	ldi	r24, 0x0C	; 12
 1ca:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
	LCD_config(0x01);
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
 1d4:	8f ec       	ldi	r24, 0xCF	; 207
 1d6:	97 e0       	ldi	r25, 0x07	; 7
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <LCD_initiate+0x38>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <LCD_initiate+0x3e>
 1de:	00 00       	nop
	_delay_ms(1);
	LCD_config(0x06);
 1e0:	86 e0       	ldi	r24, 0x06	; 6
 1e2:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
	LCD_config(0x80);
 1e6:	80 e8       	ldi	r24, 0x80	; 128
 1e8:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
 1ec:	08 95       	ret

000001ee <LCD_print>:
}

void LCD_print(char *str)
{
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	ec 01       	movw	r28, r24
	while (*str != '\0')
 1f4:	03 c0       	rjmp	.+6      	; 0x1fc <LCD_print+0xe>
	{
		LCD_char(*str);
 1f6:	0e 94 96 00 	call	0x12c	; 0x12c <LCD_char>
		str++;
 1fa:	21 96       	adiw	r28, 0x01	; 1
	LCD_config(0x80);
}

void LCD_print(char *str)
{
	while (*str != '\0')
 1fc:	88 81       	ld	r24, Y
 1fe:	81 11       	cpse	r24, r1
 200:	fa cf       	rjmp	.-12     	; 0x1f6 <LCD_print+0x8>
	{
		LCD_char(*str);
		str++;
	}
}
 202:	df 91       	pop	r29
 204:	cf 91       	pop	r28
 206:	08 95       	ret

00000208 <main>:
#include <util/delay.h>
#include "LCD_4BIT.h"
#include <stdlib.h>

int main(void)
{
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	cd b7       	in	r28, 0x3d	; 61
 20e:	de b7       	in	r29, 0x3e	; 62
 210:	60 97       	sbiw	r28, 0x10	; 16
 212:	0f b6       	in	r0, 0x3f	; 63
 214:	f8 94       	cli
 216:	de bf       	out	0x3e, r29	; 62
 218:	0f be       	out	0x3f, r0	; 63
 21a:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0b00001111; // KEYPAD
 21c:	8f e0       	ldi	r24, 0x0F	; 15
 21e:	8a bb       	out	0x1a, r24	; 26
	LCD_initiate();
 220:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <LCD_initiate>
	char array[16];
	int index = 0;
 224:	00 e0       	ldi	r16, 0x00	; 0
 226:	10 e0       	ldi	r17, 0x00	; 0
	float num1=0, num2=0;
	while (1)
	{
		PORTA = 0b00000001; // +5V on PA0 (1,2,3)
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
 22c:	cc 9b       	sbis	0x19, 4	; 25
 22e:	13 c0       	rjmp	.+38     	; 0x256 <main+0x4e>
		{
			while(PINA & 0b00010000);
 230:	cc 99       	sbic	0x19, 4	; 25
 232:	fe cf       	rjmp	.-4      	; 0x230 <main+0x28>
 234:	8f ec       	ldi	r24, 0xCF	; 207
 236:	97 e0       	ldi	r25, 0x07	; 7
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x30>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <main+0x36>
 23e:	00 00       	nop
			_delay_ms(1);
			array[index]='7';
 240:	e1 e0       	ldi	r30, 0x01	; 1
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	ec 0f       	add	r30, r28
 246:	fd 1f       	adc	r31, r29
 248:	e0 0f       	add	r30, r16
 24a:	f1 1f       	adc	r31, r17
 24c:	87 e3       	ldi	r24, 0x37	; 55
 24e:	80 83       	st	Z, r24
			index = index + 1;
 250:	0f 5f       	subi	r16, 0xFF	; 255
 252:	1f 4f       	sbci	r17, 0xFF	; 255
 254:	3e c0       	rjmp	.+124    	; 0x2d2 <main+0xca>
		}
		else if (PINA & 0b00100000)
 256:	cd 9b       	sbis	0x19, 5	; 25
 258:	13 c0       	rjmp	.+38     	; 0x280 <main+0x78>
		{
			while(PINA & 0b00100000);
 25a:	cd 99       	sbic	0x19, 5	; 25
 25c:	fe cf       	rjmp	.-4      	; 0x25a <main+0x52>
 25e:	8f ec       	ldi	r24, 0xCF	; 207
 260:	97 e0       	ldi	r25, 0x07	; 7
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <main+0x5a>
 266:	00 c0       	rjmp	.+0      	; 0x268 <main+0x60>
 268:	00 00       	nop
			_delay_ms(1);
			array[index]='8';
 26a:	e1 e0       	ldi	r30, 0x01	; 1
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	ec 0f       	add	r30, r28
 270:	fd 1f       	adc	r31, r29
 272:	e0 0f       	add	r30, r16
 274:	f1 1f       	adc	r31, r17
 276:	88 e3       	ldi	r24, 0x38	; 56
 278:	80 83       	st	Z, r24
			index = index + 1;
 27a:	0f 5f       	subi	r16, 0xFF	; 255
 27c:	1f 4f       	sbci	r17, 0xFF	; 255
 27e:	29 c0       	rjmp	.+82     	; 0x2d2 <main+0xca>
		}
		else if (PINA & 0b01000000)
 280:	ce 9b       	sbis	0x19, 6	; 25
 282:	13 c0       	rjmp	.+38     	; 0x2aa <main+0xa2>
		{
			while(PINA & 0b01000000);
 284:	ce 99       	sbic	0x19, 6	; 25
 286:	fe cf       	rjmp	.-4      	; 0x284 <main+0x7c>
 288:	8f ec       	ldi	r24, 0xCF	; 207
 28a:	97 e0       	ldi	r25, 0x07	; 7
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <main+0x84>
 290:	00 c0       	rjmp	.+0      	; 0x292 <main+0x8a>
 292:	00 00       	nop
			_delay_ms(1);
			array[index]='9';
 294:	e1 e0       	ldi	r30, 0x01	; 1
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	ec 0f       	add	r30, r28
 29a:	fd 1f       	adc	r31, r29
 29c:	e0 0f       	add	r30, r16
 29e:	f1 1f       	adc	r31, r17
 2a0:	89 e3       	ldi	r24, 0x39	; 57
 2a2:	80 83       	st	Z, r24
			index = index + 1;
 2a4:	0f 5f       	subi	r16, 0xFF	; 255
 2a6:	1f 4f       	sbci	r17, 0xFF	; 255
 2a8:	14 c0       	rjmp	.+40     	; 0x2d2 <main+0xca>
		}
		else if (PINA & 0b10000000)
 2aa:	cf 9b       	sbis	0x19, 7	; 25
 2ac:	12 c0       	rjmp	.+36     	; 0x2d2 <main+0xca>
		{
			while(PINA & 0b10000000);
 2ae:	cf 99       	sbic	0x19, 7	; 25
 2b0:	fe cf       	rjmp	.-4      	; 0x2ae <main+0xa6>
 2b2:	8f ec       	ldi	r24, 0xCF	; 207
 2b4:	97 e0       	ldi	r25, 0x07	; 7
 2b6:	01 97       	sbiw	r24, 0x01	; 1
 2b8:	f1 f7       	brne	.-4      	; 0x2b6 <main+0xae>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <main+0xb4>
 2bc:	00 00       	nop
			_delay_ms(1);
			array[index]='/';
 2be:	e1 e0       	ldi	r30, 0x01	; 1
 2c0:	f0 e0       	ldi	r31, 0x00	; 0
 2c2:	ec 0f       	add	r30, r28
 2c4:	fd 1f       	adc	r31, r29
 2c6:	e0 0f       	add	r30, r16
 2c8:	f1 1f       	adc	r31, r17
 2ca:	8f e2       	ldi	r24, 0x2F	; 47
 2cc:	80 83       	st	Z, r24
			index = index + 1;
 2ce:	0f 5f       	subi	r16, 0xFF	; 255
 2d0:	1f 4f       	sbci	r17, 0xFF	; 255
 2d2:	9f ef       	ldi	r25, 0xFF	; 255
 2d4:	20 e7       	ldi	r18, 0x70	; 112
 2d6:	82 e0       	ldi	r24, 0x02	; 2
 2d8:	91 50       	subi	r25, 0x01	; 1
 2da:	20 40       	sbci	r18, 0x00	; 0
 2dc:	80 40       	sbci	r24, 0x00	; 0
 2de:	e1 f7       	brne	.-8      	; 0x2d8 <main+0xd0>
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <main+0xda>
 2e2:	00 00       	nop
		}
		
		_delay_ms(100);
		
		PORTA = 0b00000010; // +5V on PA1 (4,5,6)
 2e4:	82 e0       	ldi	r24, 0x02	; 2
 2e6:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
 2e8:	cc 9b       	sbis	0x19, 4	; 25
 2ea:	13 c0       	rjmp	.+38     	; 0x312 <main+0x10a>
		{
			while(PINA & 0b00010000);
 2ec:	cc 99       	sbic	0x19, 4	; 25
 2ee:	fe cf       	rjmp	.-4      	; 0x2ec <main+0xe4>
 2f0:	8f ec       	ldi	r24, 0xCF	; 207
 2f2:	97 e0       	ldi	r25, 0x07	; 7
 2f4:	01 97       	sbiw	r24, 0x01	; 1
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <main+0xec>
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <main+0xf2>
 2fa:	00 00       	nop
			_delay_ms(1);
			array[index]='4';
 2fc:	e1 e0       	ldi	r30, 0x01	; 1
 2fe:	f0 e0       	ldi	r31, 0x00	; 0
 300:	ec 0f       	add	r30, r28
 302:	fd 1f       	adc	r31, r29
 304:	e0 0f       	add	r30, r16
 306:	f1 1f       	adc	r31, r17
 308:	84 e3       	ldi	r24, 0x34	; 52
 30a:	80 83       	st	Z, r24
			index = index + 1;
 30c:	0f 5f       	subi	r16, 0xFF	; 255
 30e:	1f 4f       	sbci	r17, 0xFF	; 255
 310:	42 c0       	rjmp	.+132    	; 0x396 <main+0x18e>
		}
		else if (PINA & 0b00100000)
 312:	cd 9b       	sbis	0x19, 5	; 25
 314:	13 c0       	rjmp	.+38     	; 0x33c <main+0x134>
		{
			while(PINA & 0b00100000);
 316:	cd 99       	sbic	0x19, 5	; 25
 318:	fe cf       	rjmp	.-4      	; 0x316 <main+0x10e>
 31a:	8f ec       	ldi	r24, 0xCF	; 207
 31c:	97 e0       	ldi	r25, 0x07	; 7
 31e:	01 97       	sbiw	r24, 0x01	; 1
 320:	f1 f7       	brne	.-4      	; 0x31e <main+0x116>
 322:	00 c0       	rjmp	.+0      	; 0x324 <main+0x11c>
 324:	00 00       	nop
			_delay_ms(1);
			array[index]='5';
 326:	e1 e0       	ldi	r30, 0x01	; 1
 328:	f0 e0       	ldi	r31, 0x00	; 0
 32a:	ec 0f       	add	r30, r28
 32c:	fd 1f       	adc	r31, r29
 32e:	e0 0f       	add	r30, r16
 330:	f1 1f       	adc	r31, r17
 332:	85 e3       	ldi	r24, 0x35	; 53
 334:	80 83       	st	Z, r24
			index = index + 1;
 336:	0f 5f       	subi	r16, 0xFF	; 255
 338:	1f 4f       	sbci	r17, 0xFF	; 255
 33a:	2d c0       	rjmp	.+90     	; 0x396 <main+0x18e>
		}
		else if (PINA & 0b01000000)
 33c:	ce 9b       	sbis	0x19, 6	; 25
 33e:	13 c0       	rjmp	.+38     	; 0x366 <main+0x15e>
		{
			while(PINA & 0b01000000);
 340:	ce 99       	sbic	0x19, 6	; 25
 342:	fe cf       	rjmp	.-4      	; 0x340 <main+0x138>
 344:	8f ec       	ldi	r24, 0xCF	; 207
 346:	97 e0       	ldi	r25, 0x07	; 7
 348:	01 97       	sbiw	r24, 0x01	; 1
 34a:	f1 f7       	brne	.-4      	; 0x348 <main+0x140>
 34c:	00 c0       	rjmp	.+0      	; 0x34e <main+0x146>
 34e:	00 00       	nop
			_delay_ms(1);
			array[index]='6';
 350:	e1 e0       	ldi	r30, 0x01	; 1
 352:	f0 e0       	ldi	r31, 0x00	; 0
 354:	ec 0f       	add	r30, r28
 356:	fd 1f       	adc	r31, r29
 358:	e0 0f       	add	r30, r16
 35a:	f1 1f       	adc	r31, r17
 35c:	86 e3       	ldi	r24, 0x36	; 54
 35e:	80 83       	st	Z, r24
			index = index + 1;
 360:	0f 5f       	subi	r16, 0xFF	; 255
 362:	1f 4f       	sbci	r17, 0xFF	; 255
 364:	18 c0       	rjmp	.+48     	; 0x396 <main+0x18e>
		}
		else if (PINA & 0b10000000)
 366:	cf 9b       	sbis	0x19, 7	; 25
 368:	16 c0       	rjmp	.+44     	; 0x396 <main+0x18e>
		{
			while(PINA & 0b10000000);
 36a:	cf 99       	sbic	0x19, 7	; 25
 36c:	fe cf       	rjmp	.-4      	; 0x36a <main+0x162>
 36e:	8f ec       	ldi	r24, 0xCF	; 207
 370:	97 e0       	ldi	r25, 0x07	; 7
 372:	01 97       	sbiw	r24, 0x01	; 1
 374:	f1 f7       	brne	.-4      	; 0x372 <main+0x16a>
 376:	00 c0       	rjmp	.+0      	; 0x378 <main+0x170>
 378:	00 00       	nop
			_delay_ms(1);
			num1 = atof(array);
 37a:	ce 01       	movw	r24, r28
 37c:	01 96       	adiw	r24, 0x01	; 1
 37e:	0e 94 a1 02 	call	0x542	; 0x542 <atof>
			array[index]='X';
 382:	e1 e0       	ldi	r30, 0x01	; 1
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	ec 0f       	add	r30, r28
 388:	fd 1f       	adc	r31, r29
 38a:	e0 0f       	add	r30, r16
 38c:	f1 1f       	adc	r31, r17
 38e:	88 e5       	ldi	r24, 0x58	; 88
 390:	80 83       	st	Z, r24
			index = index + 1;
 392:	0f 5f       	subi	r16, 0xFF	; 255
 394:	1f 4f       	sbci	r17, 0xFF	; 255
 396:	9f ef       	ldi	r25, 0xFF	; 255
 398:	20 e7       	ldi	r18, 0x70	; 112
 39a:	82 e0       	ldi	r24, 0x02	; 2
 39c:	91 50       	subi	r25, 0x01	; 1
 39e:	20 40       	sbci	r18, 0x00	; 0
 3a0:	80 40       	sbci	r24, 0x00	; 0
 3a2:	e1 f7       	brne	.-8      	; 0x39c <main+0x194>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0x19e>
 3a6:	00 00       	nop
		}
		
		_delay_ms(100);
		
		PORTA = 0b00000100; // +5V on PA2 (7,8,9)
 3a8:	84 e0       	ldi	r24, 0x04	; 4
 3aa:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
 3ac:	cc 9b       	sbis	0x19, 4	; 25
 3ae:	13 c0       	rjmp	.+38     	; 0x3d6 <main+0x1ce>
		{
			while(PINA & 0b00010000);
 3b0:	cc 99       	sbic	0x19, 4	; 25
 3b2:	fe cf       	rjmp	.-4      	; 0x3b0 <main+0x1a8>
 3b4:	8f ec       	ldi	r24, 0xCF	; 207
 3b6:	97 e0       	ldi	r25, 0x07	; 7
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <main+0x1b0>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <main+0x1b6>
 3be:	00 00       	nop
			_delay_ms(1);
			array[index]='1';
 3c0:	e1 e0       	ldi	r30, 0x01	; 1
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	ec 0f       	add	r30, r28
 3c6:	fd 1f       	adc	r31, r29
 3c8:	e0 0f       	add	r30, r16
 3ca:	f1 1f       	adc	r31, r17
 3cc:	81 e3       	ldi	r24, 0x31	; 49
 3ce:	80 83       	st	Z, r24
			index = index + 1;
 3d0:	0f 5f       	subi	r16, 0xFF	; 255
 3d2:	1f 4f       	sbci	r17, 0xFF	; 255
 3d4:	3e c0       	rjmp	.+124    	; 0x452 <__DATA_REGION_LENGTH__+0x52>
		}
		else if (PINA & 0b00100000)
 3d6:	cd 9b       	sbis	0x19, 5	; 25
 3d8:	13 c0       	rjmp	.+38     	; 0x400 <__DATA_REGION_LENGTH__>
		{
			while(PINA & 0b00100000);
 3da:	cd 99       	sbic	0x19, 5	; 25
 3dc:	fe cf       	rjmp	.-4      	; 0x3da <main+0x1d2>
 3de:	8f ec       	ldi	r24, 0xCF	; 207
 3e0:	97 e0       	ldi	r25, 0x07	; 7
 3e2:	01 97       	sbiw	r24, 0x01	; 1
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <main+0x1da>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <main+0x1e0>
 3e8:	00 00       	nop
			_delay_ms(1);
			array[index]='2';
 3ea:	e1 e0       	ldi	r30, 0x01	; 1
 3ec:	f0 e0       	ldi	r31, 0x00	; 0
 3ee:	ec 0f       	add	r30, r28
 3f0:	fd 1f       	adc	r31, r29
 3f2:	e0 0f       	add	r30, r16
 3f4:	f1 1f       	adc	r31, r17
 3f6:	82 e3       	ldi	r24, 0x32	; 50
 3f8:	80 83       	st	Z, r24
			index = index + 1;
 3fa:	0f 5f       	subi	r16, 0xFF	; 255
 3fc:	1f 4f       	sbci	r17, 0xFF	; 255
 3fe:	29 c0       	rjmp	.+82     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
		}
		else if (PINA & 0b01000000)
 400:	ce 9b       	sbis	0x19, 6	; 25
 402:	13 c0       	rjmp	.+38     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
		{
			while(PINA & 0b01000000);
 404:	ce 99       	sbic	0x19, 6	; 25
 406:	fe cf       	rjmp	.-4      	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 408:	8f ec       	ldi	r24, 0xCF	; 207
 40a:	97 e0       	ldi	r25, 0x07	; 7
 40c:	01 97       	sbiw	r24, 0x01	; 1
 40e:	f1 f7       	brne	.-4      	; 0x40c <__DATA_REGION_LENGTH__+0xc>
 410:	00 c0       	rjmp	.+0      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 412:	00 00       	nop
			_delay_ms(1);
			array[index]='3';
 414:	e1 e0       	ldi	r30, 0x01	; 1
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	ec 0f       	add	r30, r28
 41a:	fd 1f       	adc	r31, r29
 41c:	e0 0f       	add	r30, r16
 41e:	f1 1f       	adc	r31, r17
 420:	83 e3       	ldi	r24, 0x33	; 51
 422:	80 83       	st	Z, r24
			index = index + 1;
 424:	0f 5f       	subi	r16, 0xFF	; 255
 426:	1f 4f       	sbci	r17, 0xFF	; 255
 428:	14 c0       	rjmp	.+40     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
		}
		else if (PINA & 0b10000000)
 42a:	cf 9b       	sbis	0x19, 7	; 25
 42c:	12 c0       	rjmp	.+36     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
		{
			while(PINA & 0b10000000);
 42e:	cf 99       	sbic	0x19, 7	; 25
 430:	fe cf       	rjmp	.-4      	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 432:	8f ec       	ldi	r24, 0xCF	; 207
 434:	97 e0       	ldi	r25, 0x07	; 7
 436:	01 97       	sbiw	r24, 0x01	; 1
 438:	f1 f7       	brne	.-4      	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 43a:	00 c0       	rjmp	.+0      	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
 43c:	00 00       	nop
			_delay_ms(1);
			array[index]='-';
 43e:	e1 e0       	ldi	r30, 0x01	; 1
 440:	f0 e0       	ldi	r31, 0x00	; 0
 442:	ec 0f       	add	r30, r28
 444:	fd 1f       	adc	r31, r29
 446:	e0 0f       	add	r30, r16
 448:	f1 1f       	adc	r31, r17
 44a:	8d e2       	ldi	r24, 0x2D	; 45
 44c:	80 83       	st	Z, r24
			index = index + 1;
 44e:	0f 5f       	subi	r16, 0xFF	; 255
 450:	1f 4f       	sbci	r17, 0xFF	; 255
 452:	9f ef       	ldi	r25, 0xFF	; 255
 454:	20 e7       	ldi	r18, 0x70	; 112
 456:	82 e0       	ldi	r24, 0x02	; 2
 458:	91 50       	subi	r25, 0x01	; 1
 45a:	20 40       	sbci	r18, 0x00	; 0
 45c:	80 40       	sbci	r24, 0x00	; 0
 45e:	e1 f7       	brne	.-8      	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 460:	00 c0       	rjmp	.+0      	; 0x462 <__stack+0x3>
 462:	00 00       	nop
		}
		
		_delay_ms(100);
		
		PORTA = 0b00001000; // +5V on PA2 (7,8,9)
 464:	88 e0       	ldi	r24, 0x08	; 8
 466:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
 468:	cc 9b       	sbis	0x19, 4	; 25
 46a:	1c c0       	rjmp	.+56     	; 0x4a4 <__stack+0x45>
		{
			while(PINA & 0b00010000);
 46c:	cc 99       	sbic	0x19, 4	; 25
 46e:	fe cf       	rjmp	.-4      	; 0x46c <__stack+0xd>
 470:	8f ec       	ldi	r24, 0xCF	; 207
 472:	97 e0       	ldi	r25, 0x07	; 7
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <__stack+0x15>
 478:	00 c0       	rjmp	.+0      	; 0x47a <__stack+0x1b>
 47a:	00 00       	nop
			_delay_ms(1);
			for (int i = 0; i <16; i = i + 1)
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	08 c0       	rjmp	.+16     	; 0x492 <__stack+0x33>
			{
				array[i]='\0';
 482:	e1 e0       	ldi	r30, 0x01	; 1
 484:	f0 e0       	ldi	r31, 0x00	; 0
 486:	ec 0f       	add	r30, r28
 488:	fd 1f       	adc	r31, r29
 48a:	e8 0f       	add	r30, r24
 48c:	f9 1f       	adc	r31, r25
 48e:	10 82       	st	Z, r1
		PORTA = 0b00001000; // +5V on PA2 (7,8,9)
		if (PINA & 0b00010000)
		{
			while(PINA & 0b00010000);
			_delay_ms(1);
			for (int i = 0; i <16; i = i + 1)
 490:	01 96       	adiw	r24, 0x01	; 1
 492:	80 31       	cpi	r24, 0x10	; 16
 494:	91 05       	cpc	r25, r1
 496:	ac f3       	brlt	.-22     	; 0x482 <__stack+0x23>
			{
				array[i]='\0';
			}
			num1=0, num2=0;
			LCD_config(0x01);
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
			index = 0;
 49e:	00 e0       	ldi	r16, 0x00	; 0
 4a0:	10 e0       	ldi	r17, 0x00	; 0
 4a2:	3e c0       	rjmp	.+124    	; 0x520 <__stack+0xc1>
		}
		else if (PINA & 0b00100000)
 4a4:	cd 9b       	sbis	0x19, 5	; 25
 4a6:	13 c0       	rjmp	.+38     	; 0x4ce <__stack+0x6f>
		{
			while(PINA & 0b00100000);
 4a8:	cd 99       	sbic	0x19, 5	; 25
 4aa:	fe cf       	rjmp	.-4      	; 0x4a8 <__stack+0x49>
 4ac:	8f ec       	ldi	r24, 0xCF	; 207
 4ae:	97 e0       	ldi	r25, 0x07	; 7
 4b0:	01 97       	sbiw	r24, 0x01	; 1
 4b2:	f1 f7       	brne	.-4      	; 0x4b0 <__stack+0x51>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <__stack+0x57>
 4b6:	00 00       	nop
			_delay_ms(1);
			array[index]='0';
 4b8:	e1 e0       	ldi	r30, 0x01	; 1
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	ec 0f       	add	r30, r28
 4be:	fd 1f       	adc	r31, r29
 4c0:	e0 0f       	add	r30, r16
 4c2:	f1 1f       	adc	r31, r17
 4c4:	80 e3       	ldi	r24, 0x30	; 48
 4c6:	80 83       	st	Z, r24
			index = index + 1;
 4c8:	0f 5f       	subi	r16, 0xFF	; 255
 4ca:	1f 4f       	sbci	r17, 0xFF	; 255
 4cc:	29 c0       	rjmp	.+82     	; 0x520 <__stack+0xc1>
		}
		else if (PINA & 0b01000000)
 4ce:	ce 9b       	sbis	0x19, 6	; 25
 4d0:	13 c0       	rjmp	.+38     	; 0x4f8 <__stack+0x99>
		{
			while(PINA & 0b01000000);
 4d2:	ce 99       	sbic	0x19, 6	; 25
 4d4:	fe cf       	rjmp	.-4      	; 0x4d2 <__stack+0x73>
 4d6:	8f ec       	ldi	r24, 0xCF	; 207
 4d8:	97 e0       	ldi	r25, 0x07	; 7
 4da:	01 97       	sbiw	r24, 0x01	; 1
 4dc:	f1 f7       	brne	.-4      	; 0x4da <__stack+0x7b>
 4de:	00 c0       	rjmp	.+0      	; 0x4e0 <__stack+0x81>
 4e0:	00 00       	nop
			_delay_ms(1);
			array[index]='=';
 4e2:	e1 e0       	ldi	r30, 0x01	; 1
 4e4:	f0 e0       	ldi	r31, 0x00	; 0
 4e6:	ec 0f       	add	r30, r28
 4e8:	fd 1f       	adc	r31, r29
 4ea:	e0 0f       	add	r30, r16
 4ec:	f1 1f       	adc	r31, r17
 4ee:	8d e3       	ldi	r24, 0x3D	; 61
 4f0:	80 83       	st	Z, r24
			index = index + 1;
 4f2:	0f 5f       	subi	r16, 0xFF	; 255
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	14 c0       	rjmp	.+40     	; 0x520 <__stack+0xc1>
		}
		else if (PINA & 0b10000000)
 4f8:	cf 9b       	sbis	0x19, 7	; 25
 4fa:	12 c0       	rjmp	.+36     	; 0x520 <__stack+0xc1>
		{
			while(PINA & 0b10000000);
 4fc:	cf 99       	sbic	0x19, 7	; 25
 4fe:	fe cf       	rjmp	.-4      	; 0x4fc <__stack+0x9d>
 500:	8f ec       	ldi	r24, 0xCF	; 207
 502:	97 e0       	ldi	r25, 0x07	; 7
 504:	01 97       	sbiw	r24, 0x01	; 1
 506:	f1 f7       	brne	.-4      	; 0x504 <__stack+0xa5>
 508:	00 c0       	rjmp	.+0      	; 0x50a <__stack+0xab>
 50a:	00 00       	nop
			_delay_ms(1);
			array[index]='+';
 50c:	e1 e0       	ldi	r30, 0x01	; 1
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	ec 0f       	add	r30, r28
 512:	fd 1f       	adc	r31, r29
 514:	e0 0f       	add	r30, r16
 516:	f1 1f       	adc	r31, r17
 518:	8b e2       	ldi	r24, 0x2B	; 43
 51a:	80 83       	st	Z, r24
			index = index + 1;
 51c:	0f 5f       	subi	r16, 0xFF	; 255
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	9f ef       	ldi	r25, 0xFF	; 255
 522:	20 e7       	ldi	r18, 0x70	; 112
 524:	82 e0       	ldi	r24, 0x02	; 2
 526:	91 50       	subi	r25, 0x01	; 1
 528:	20 40       	sbci	r18, 0x00	; 0
 52a:	80 40       	sbci	r24, 0x00	; 0
 52c:	e1 f7       	brne	.-8      	; 0x526 <__stack+0xc7>
 52e:	00 c0       	rjmp	.+0      	; 0x530 <__stack+0xd1>
 530:	00 00       	nop
		}
		
		_delay_ms(100);
		LCD_config(0x80);
 532:	80 e8       	ldi	r24, 0x80	; 128
 534:	0e 94 5c 00 	call	0xb8	; 0xb8 <LCD_config>
		LCD_print(array);
 538:	ce 01       	movw	r24, r28
 53a:	01 96       	adiw	r24, 0x01	; 1
 53c:	0e 94 f7 00 	call	0x1ee	; 0x1ee <LCD_print>
	}
 540:	73 ce       	rjmp	.-794    	; 0x228 <main+0x20>

00000542 <atof>:
 542:	66 27       	eor	r22, r22
 544:	77 27       	eor	r23, r23
 546:	0c 94 a5 02 	jmp	0x54a	; 0x54a <strtod>

0000054a <strtod>:
 54a:	a0 e0       	ldi	r26, 0x00	; 0
 54c:	b0 e0       	ldi	r27, 0x00	; 0
 54e:	eb ea       	ldi	r30, 0xAB	; 171
 550:	f2 e0       	ldi	r31, 0x02	; 2
 552:	0c 94 4c 05 	jmp	0xa98	; 0xa98 <__prologue_saves__+0xc>
 556:	ec 01       	movw	r28, r24
 558:	6b 01       	movw	r12, r22
 55a:	61 15       	cp	r22, r1
 55c:	71 05       	cpc	r23, r1
 55e:	19 f0       	breq	.+6      	; 0x566 <strtod+0x1c>
 560:	fb 01       	movw	r30, r22
 562:	91 83       	std	Z+1, r25	; 0x01
 564:	80 83       	st	Z, r24
 566:	7e 01       	movw	r14, r28
 568:	ff ef       	ldi	r31, 0xFF	; 255
 56a:	ef 1a       	sub	r14, r31
 56c:	ff 0a       	sbc	r15, r31
 56e:	08 81       	ld	r16, Y
 570:	80 2f       	mov	r24, r16
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <isspace>
 578:	89 2b       	or	r24, r25
 57a:	11 f0       	breq	.+4      	; 0x580 <strtod+0x36>
 57c:	e7 01       	movw	r28, r14
 57e:	f3 cf       	rjmp	.-26     	; 0x566 <strtod+0x1c>
 580:	0d 32       	cpi	r16, 0x2D	; 45
 582:	39 f4       	brne	.+14     	; 0x592 <strtod+0x48>
 584:	7e 01       	movw	r14, r28
 586:	82 e0       	ldi	r24, 0x02	; 2
 588:	e8 0e       	add	r14, r24
 58a:	f1 1c       	adc	r15, r1
 58c:	09 81       	ldd	r16, Y+1	; 0x01
 58e:	11 e0       	ldi	r17, 0x01	; 1
 590:	08 c0       	rjmp	.+16     	; 0x5a2 <strtod+0x58>
 592:	0b 32       	cpi	r16, 0x2B	; 43
 594:	29 f4       	brne	.+10     	; 0x5a0 <strtod+0x56>
 596:	7e 01       	movw	r14, r28
 598:	92 e0       	ldi	r25, 0x02	; 2
 59a:	e9 0e       	add	r14, r25
 59c:	f1 1c       	adc	r15, r1
 59e:	09 81       	ldd	r16, Y+1	; 0x01
 5a0:	10 e0       	ldi	r17, 0x00	; 0
 5a2:	e7 01       	movw	r28, r14
 5a4:	21 97       	sbiw	r28, 0x01	; 1
 5a6:	43 e0       	ldi	r20, 0x03	; 3
 5a8:	50 e0       	ldi	r21, 0x00	; 0
 5aa:	6c e5       	ldi	r22, 0x5C	; 92
 5ac:	70 e0       	ldi	r23, 0x00	; 0
 5ae:	ce 01       	movw	r24, r28
 5b0:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <strncasecmp_P>
 5b4:	89 2b       	or	r24, r25
 5b6:	c1 f4       	brne	.+48     	; 0x5e8 <strtod+0x9e>
 5b8:	23 96       	adiw	r28, 0x03	; 3
 5ba:	45 e0       	ldi	r20, 0x05	; 5
 5bc:	50 e0       	ldi	r21, 0x00	; 0
 5be:	67 e5       	ldi	r22, 0x57	; 87
 5c0:	70 e0       	ldi	r23, 0x00	; 0
 5c2:	ce 01       	movw	r24, r28
 5c4:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <strncasecmp_P>
 5c8:	89 2b       	or	r24, r25
 5ca:	09 f4       	brne	.+2      	; 0x5ce <strtod+0x84>
 5cc:	25 96       	adiw	r28, 0x05	; 5
 5ce:	c1 14       	cp	r12, r1
 5d0:	d1 04       	cpc	r13, r1
 5d2:	19 f0       	breq	.+6      	; 0x5da <strtod+0x90>
 5d4:	f6 01       	movw	r30, r12
 5d6:	d1 83       	std	Z+1, r29	; 0x01
 5d8:	c0 83       	st	Z, r28
 5da:	11 11       	cpse	r17, r1
 5dc:	f6 c0       	rjmp	.+492    	; 0x7ca <strtod+0x280>
 5de:	60 e0       	ldi	r22, 0x00	; 0
 5e0:	70 e0       	ldi	r23, 0x00	; 0
 5e2:	80 e8       	ldi	r24, 0x80	; 128
 5e4:	9f e7       	ldi	r25, 0x7F	; 127
 5e6:	fa c0       	rjmp	.+500    	; 0x7dc <strtod+0x292>
 5e8:	43 e0       	ldi	r20, 0x03	; 3
 5ea:	50 e0       	ldi	r21, 0x00	; 0
 5ec:	64 e5       	ldi	r22, 0x54	; 84
 5ee:	70 e0       	ldi	r23, 0x00	; 0
 5f0:	ce 01       	movw	r24, r28
 5f2:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <strncasecmp_P>
 5f6:	89 2b       	or	r24, r25
 5f8:	59 f4       	brne	.+22     	; 0x610 <strtod+0xc6>
 5fa:	c1 14       	cp	r12, r1
 5fc:	d1 04       	cpc	r13, r1
 5fe:	09 f4       	brne	.+2      	; 0x602 <strtod+0xb8>
 600:	e9 c0       	rjmp	.+466    	; 0x7d4 <strtod+0x28a>
 602:	f2 e0       	ldi	r31, 0x02	; 2
 604:	ef 0e       	add	r14, r31
 606:	f1 1c       	adc	r15, r1
 608:	f6 01       	movw	r30, r12
 60a:	f1 82       	std	Z+1, r15	; 0x01
 60c:	e0 82       	st	Z, r14
 60e:	e2 c0       	rjmp	.+452    	; 0x7d4 <strtod+0x28a>
 610:	20 e0       	ldi	r18, 0x00	; 0
 612:	30 e0       	ldi	r19, 0x00	; 0
 614:	a9 01       	movw	r20, r18
 616:	c0 e0       	ldi	r28, 0x00	; 0
 618:	d0 e0       	ldi	r29, 0x00	; 0
 61a:	f7 01       	movw	r30, r14
 61c:	80 ed       	ldi	r24, 0xD0	; 208
 61e:	a8 2e       	mov	r10, r24
 620:	a0 0e       	add	r10, r16
 622:	89 e0       	ldi	r24, 0x09	; 9
 624:	8a 15       	cp	r24, r10
 626:	30 f1       	brcs	.+76     	; 0x674 <strtod+0x12a>
 628:	91 2f       	mov	r25, r17
 62a:	92 60       	ori	r25, 0x02	; 2
 62c:	b9 2e       	mov	r11, r25
 62e:	81 2f       	mov	r24, r17
 630:	88 70       	andi	r24, 0x08	; 8
 632:	12 ff       	sbrs	r17, 2
 634:	04 c0       	rjmp	.+8      	; 0x63e <strtod+0xf4>
 636:	81 11       	cpse	r24, r1
 638:	24 c0       	rjmp	.+72     	; 0x682 <strtod+0x138>
 63a:	21 96       	adiw	r28, 0x01	; 1
 63c:	22 c0       	rjmp	.+68     	; 0x682 <strtod+0x138>
 63e:	81 11       	cpse	r24, r1
 640:	21 97       	sbiw	r28, 0x01	; 1
 642:	a5 e0       	ldi	r26, 0x05	; 5
 644:	b0 e0       	ldi	r27, 0x00	; 0
 646:	0e 94 3b 05 	call	0xa76	; 0xa76 <__muluhisi3>
 64a:	dc 01       	movw	r26, r24
 64c:	cb 01       	movw	r24, r22
 64e:	88 0f       	add	r24, r24
 650:	99 1f       	adc	r25, r25
 652:	aa 1f       	adc	r26, r26
 654:	bb 1f       	adc	r27, r27
 656:	9c 01       	movw	r18, r24
 658:	ad 01       	movw	r20, r26
 65a:	2a 0d       	add	r18, r10
 65c:	31 1d       	adc	r19, r1
 65e:	41 1d       	adc	r20, r1
 660:	51 1d       	adc	r21, r1
 662:	28 39       	cpi	r18, 0x98	; 152
 664:	89 e9       	ldi	r24, 0x99	; 153
 666:	38 07       	cpc	r19, r24
 668:	48 07       	cpc	r20, r24
 66a:	89 e1       	ldi	r24, 0x19	; 25
 66c:	58 07       	cpc	r21, r24
 66e:	48 f0       	brcs	.+18     	; 0x682 <strtod+0x138>
 670:	16 60       	ori	r17, 0x06	; 6
 672:	06 c0       	rjmp	.+12     	; 0x680 <strtod+0x136>
 674:	9e ef       	ldi	r25, 0xFE	; 254
 676:	a9 12       	cpse	r10, r25
 678:	0a c0       	rjmp	.+20     	; 0x68e <strtod+0x144>
 67a:	13 fd       	sbrc	r17, 3
 67c:	40 c0       	rjmp	.+128    	; 0x6fe <strtod+0x1b4>
 67e:	18 60       	ori	r17, 0x08	; 8
 680:	b1 2e       	mov	r11, r17
 682:	8f ef       	ldi	r24, 0xFF	; 255
 684:	e8 1a       	sub	r14, r24
 686:	f8 0a       	sbc	r15, r24
 688:	00 81       	ld	r16, Z
 68a:	1b 2d       	mov	r17, r11
 68c:	c6 cf       	rjmp	.-116    	; 0x61a <strtod+0xd0>
 68e:	80 2f       	mov	r24, r16
 690:	8f 7d       	andi	r24, 0xDF	; 223
 692:	85 34       	cpi	r24, 0x45	; 69
 694:	a1 f5       	brne	.+104    	; 0x6fe <strtod+0x1b4>
 696:	80 81       	ld	r24, Z
 698:	8d 32       	cpi	r24, 0x2D	; 45
 69a:	11 f4       	brne	.+4      	; 0x6a0 <strtod+0x156>
 69c:	10 61       	ori	r17, 0x10	; 16
 69e:	06 c0       	rjmp	.+12     	; 0x6ac <strtod+0x162>
 6a0:	8b 32       	cpi	r24, 0x2B	; 43
 6a2:	21 f0       	breq	.+8      	; 0x6ac <strtod+0x162>
 6a4:	31 96       	adiw	r30, 0x01	; 1
 6a6:	61 e0       	ldi	r22, 0x01	; 1
 6a8:	70 e0       	ldi	r23, 0x00	; 0
 6aa:	04 c0       	rjmp	.+8      	; 0x6b4 <strtod+0x16a>
 6ac:	81 81       	ldd	r24, Z+1	; 0x01
 6ae:	32 96       	adiw	r30, 0x02	; 2
 6b0:	62 e0       	ldi	r22, 0x02	; 2
 6b2:	70 e0       	ldi	r23, 0x00	; 0
 6b4:	80 53       	subi	r24, 0x30	; 48
 6b6:	8a 30       	cpi	r24, 0x0A	; 10
 6b8:	18 f0       	brcs	.+6      	; 0x6c0 <strtod+0x176>
 6ba:	e6 1b       	sub	r30, r22
 6bc:	f7 0b       	sbc	r31, r23
 6be:	1f c0       	rjmp	.+62     	; 0x6fe <strtod+0x1b4>
 6c0:	60 e0       	ldi	r22, 0x00	; 0
 6c2:	70 e0       	ldi	r23, 0x00	; 0
 6c4:	60 38       	cpi	r22, 0x80	; 128
 6c6:	9c e0       	ldi	r25, 0x0C	; 12
 6c8:	79 07       	cpc	r23, r25
 6ca:	5c f4       	brge	.+22     	; 0x6e2 <strtod+0x198>
 6cc:	db 01       	movw	r26, r22
 6ce:	aa 0f       	add	r26, r26
 6d0:	bb 1f       	adc	r27, r27
 6d2:	aa 0f       	add	r26, r26
 6d4:	bb 1f       	adc	r27, r27
 6d6:	6a 0f       	add	r22, r26
 6d8:	7b 1f       	adc	r23, r27
 6da:	66 0f       	add	r22, r22
 6dc:	77 1f       	adc	r23, r23
 6de:	68 0f       	add	r22, r24
 6e0:	71 1d       	adc	r23, r1
 6e2:	31 96       	adiw	r30, 0x01	; 1
 6e4:	df 01       	movw	r26, r30
 6e6:	11 97       	sbiw	r26, 0x01	; 1
 6e8:	8c 91       	ld	r24, X
 6ea:	80 53       	subi	r24, 0x30	; 48
 6ec:	8a 30       	cpi	r24, 0x0A	; 10
 6ee:	50 f3       	brcs	.-44     	; 0x6c4 <strtod+0x17a>
 6f0:	14 ff       	sbrs	r17, 4
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <strtod+0x1b0>
 6f4:	71 95       	neg	r23
 6f6:	61 95       	neg	r22
 6f8:	71 09       	sbc	r23, r1
 6fa:	c6 0f       	add	r28, r22
 6fc:	d7 1f       	adc	r29, r23
 6fe:	11 ff       	sbrs	r17, 1
 700:	08 c0       	rjmp	.+16     	; 0x712 <strtod+0x1c8>
 702:	c1 14       	cp	r12, r1
 704:	d1 04       	cpc	r13, r1
 706:	29 f0       	breq	.+10     	; 0x712 <strtod+0x1c8>
 708:	cf 01       	movw	r24, r30
 70a:	01 97       	sbiw	r24, 0x01	; 1
 70c:	f6 01       	movw	r30, r12
 70e:	91 83       	std	Z+1, r25	; 0x01
 710:	80 83       	st	Z, r24
 712:	ca 01       	movw	r24, r20
 714:	b9 01       	movw	r22, r18
 716:	0e 94 19 04 	call	0x832	; 0x832 <__floatunsisf>
 71a:	21 2f       	mov	r18, r17
 71c:	23 70       	andi	r18, 0x03	; 3
 71e:	23 30       	cpi	r18, 0x03	; 3
 720:	19 f0       	breq	.+6      	; 0x728 <strtod+0x1de>
 722:	4b 01       	movw	r8, r22
 724:	5c 01       	movw	r10, r24
 726:	06 c0       	rjmp	.+12     	; 0x734 <strtod+0x1ea>
 728:	4b 01       	movw	r8, r22
 72a:	5c 01       	movw	r10, r24
 72c:	b7 fa       	bst	r11, 7
 72e:	b0 94       	com	r11
 730:	b7 f8       	bld	r11, 7
 732:	b0 94       	com	r11
 734:	20 e0       	ldi	r18, 0x00	; 0
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	a9 01       	movw	r20, r18
 73a:	c5 01       	movw	r24, r10
 73c:	b4 01       	movw	r22, r8
 73e:	0e 94 14 04 	call	0x828	; 0x828 <__cmpsf2>
 742:	88 23       	and	r24, r24
 744:	09 f4       	brne	.+2      	; 0x748 <strtod+0x1fe>
 746:	3e c0       	rjmp	.+124    	; 0x7c4 <strtod+0x27a>
 748:	d7 ff       	sbrs	r29, 7
 74a:	06 c0       	rjmp	.+12     	; 0x758 <strtod+0x20e>
 74c:	d1 95       	neg	r29
 74e:	c1 95       	neg	r28
 750:	d1 09       	sbc	r29, r1
 752:	03 e7       	ldi	r16, 0x73	; 115
 754:	10 e0       	ldi	r17, 0x00	; 0
 756:	02 c0       	rjmp	.+4      	; 0x75c <strtod+0x212>
 758:	0b e8       	ldi	r16, 0x8B	; 139
 75a:	10 e0       	ldi	r17, 0x00	; 0
 75c:	68 01       	movw	r12, r16
 75e:	f8 e1       	ldi	r31, 0x18	; 24
 760:	cf 1a       	sub	r12, r31
 762:	d1 08       	sbc	r13, r1
 764:	90 e2       	ldi	r25, 0x20	; 32
 766:	e9 2e       	mov	r14, r25
 768:	f1 2c       	mov	r15, r1
 76a:	ce 15       	cp	r28, r14
 76c:	df 05       	cpc	r29, r15
 76e:	74 f0       	brlt	.+28     	; 0x78c <strtod+0x242>
 770:	f8 01       	movw	r30, r16
 772:	25 91       	lpm	r18, Z+
 774:	35 91       	lpm	r19, Z+
 776:	45 91       	lpm	r20, Z+
 778:	54 91       	lpm	r21, Z
 77a:	c5 01       	movw	r24, r10
 77c:	b4 01       	movw	r22, r8
 77e:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__mulsf3>
 782:	4b 01       	movw	r8, r22
 784:	5c 01       	movw	r10, r24
 786:	ce 19       	sub	r28, r14
 788:	df 09       	sbc	r29, r15
 78a:	ef cf       	rjmp	.-34     	; 0x76a <strtod+0x220>
 78c:	04 50       	subi	r16, 0x04	; 4
 78e:	11 09       	sbc	r17, r1
 790:	f5 94       	asr	r15
 792:	e7 94       	ror	r14
 794:	0c 15       	cp	r16, r12
 796:	1d 05       	cpc	r17, r13
 798:	41 f7       	brne	.-48     	; 0x76a <strtod+0x220>
 79a:	8a 2d       	mov	r24, r10
 79c:	88 0f       	add	r24, r24
 79e:	8b 2d       	mov	r24, r11
 7a0:	88 1f       	adc	r24, r24
 7a2:	8f 3f       	cpi	r24, 0xFF	; 255
 7a4:	49 f0       	breq	.+18     	; 0x7b8 <strtod+0x26e>
 7a6:	20 e0       	ldi	r18, 0x00	; 0
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	a9 01       	movw	r20, r18
 7ac:	c5 01       	movw	r24, r10
 7ae:	b4 01       	movw	r22, r8
 7b0:	0e 94 14 04 	call	0x828	; 0x828 <__cmpsf2>
 7b4:	81 11       	cpse	r24, r1
 7b6:	06 c0       	rjmp	.+12     	; 0x7c4 <strtod+0x27a>
 7b8:	82 e2       	ldi	r24, 0x22	; 34
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 7c0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 7c4:	c5 01       	movw	r24, r10
 7c6:	b4 01       	movw	r22, r8
 7c8:	09 c0       	rjmp	.+18     	; 0x7dc <strtod+0x292>
 7ca:	60 e0       	ldi	r22, 0x00	; 0
 7cc:	70 e0       	ldi	r23, 0x00	; 0
 7ce:	80 e8       	ldi	r24, 0x80	; 128
 7d0:	9f ef       	ldi	r25, 0xFF	; 255
 7d2:	04 c0       	rjmp	.+8      	; 0x7dc <strtod+0x292>
 7d4:	60 e0       	ldi	r22, 0x00	; 0
 7d6:	70 e0       	ldi	r23, 0x00	; 0
 7d8:	80 ec       	ldi	r24, 0xC0	; 192
 7da:	9f e7       	ldi	r25, 0x7F	; 127
 7dc:	cd b7       	in	r28, 0x3d	; 61
 7de:	de b7       	in	r29, 0x3e	; 62
 7e0:	ec e0       	ldi	r30, 0x0C	; 12
 7e2:	0c 94 68 05 	jmp	0xad0	; 0xad0 <__epilogue_restores__+0xc>

000007e6 <isspace>:
 7e6:	91 11       	cpse	r25, r1
 7e8:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__ctype_isfalse>
 7ec:	80 32       	cpi	r24, 0x20	; 32
 7ee:	19 f0       	breq	.+6      	; 0x7f6 <isspace+0x10>
 7f0:	89 50       	subi	r24, 0x09	; 9
 7f2:	85 50       	subi	r24, 0x05	; 5
 7f4:	c8 f7       	brcc	.-14     	; 0x7e8 <isspace+0x2>
 7f6:	08 95       	ret

000007f8 <strncasecmp_P>:
 7f8:	fb 01       	movw	r30, r22
 7fa:	dc 01       	movw	r26, r24
 7fc:	41 50       	subi	r20, 0x01	; 1
 7fe:	50 40       	sbci	r21, 0x00	; 0
 800:	88 f0       	brcs	.+34     	; 0x824 <strncasecmp_P+0x2c>
 802:	8d 91       	ld	r24, X+
 804:	81 34       	cpi	r24, 0x41	; 65
 806:	1c f0       	brlt	.+6      	; 0x80e <strncasecmp_P+0x16>
 808:	8b 35       	cpi	r24, 0x5B	; 91
 80a:	0c f4       	brge	.+2      	; 0x80e <strncasecmp_P+0x16>
 80c:	80 5e       	subi	r24, 0xE0	; 224
 80e:	65 91       	lpm	r22, Z+
 810:	61 34       	cpi	r22, 0x41	; 65
 812:	1c f0       	brlt	.+6      	; 0x81a <strncasecmp_P+0x22>
 814:	6b 35       	cpi	r22, 0x5B	; 91
 816:	0c f4       	brge	.+2      	; 0x81a <strncasecmp_P+0x22>
 818:	60 5e       	subi	r22, 0xE0	; 224
 81a:	86 1b       	sub	r24, r22
 81c:	61 11       	cpse	r22, r1
 81e:	71 f3       	breq	.-36     	; 0x7fc <strncasecmp_P+0x4>
 820:	99 0b       	sbc	r25, r25
 822:	08 95       	ret
 824:	88 1b       	sub	r24, r24
 826:	fc cf       	rjmp	.-8      	; 0x820 <strncasecmp_P+0x28>

00000828 <__cmpsf2>:
 828:	0e 94 56 04 	call	0x8ac	; 0x8ac <__fp_cmp>
 82c:	08 f4       	brcc	.+2      	; 0x830 <__cmpsf2+0x8>
 82e:	81 e0       	ldi	r24, 0x01	; 1
 830:	08 95       	ret

00000832 <__floatunsisf>:
 832:	e8 94       	clt
 834:	09 c0       	rjmp	.+18     	; 0x848 <__floatsisf+0x12>

00000836 <__floatsisf>:
 836:	97 fb       	bst	r25, 7
 838:	3e f4       	brtc	.+14     	; 0x848 <__floatsisf+0x12>
 83a:	90 95       	com	r25
 83c:	80 95       	com	r24
 83e:	70 95       	com	r23
 840:	61 95       	neg	r22
 842:	7f 4f       	sbci	r23, 0xFF	; 255
 844:	8f 4f       	sbci	r24, 0xFF	; 255
 846:	9f 4f       	sbci	r25, 0xFF	; 255
 848:	99 23       	and	r25, r25
 84a:	a9 f0       	breq	.+42     	; 0x876 <__floatsisf+0x40>
 84c:	f9 2f       	mov	r31, r25
 84e:	96 e9       	ldi	r25, 0x96	; 150
 850:	bb 27       	eor	r27, r27
 852:	93 95       	inc	r25
 854:	f6 95       	lsr	r31
 856:	87 95       	ror	r24
 858:	77 95       	ror	r23
 85a:	67 95       	ror	r22
 85c:	b7 95       	ror	r27
 85e:	f1 11       	cpse	r31, r1
 860:	f8 cf       	rjmp	.-16     	; 0x852 <__floatsisf+0x1c>
 862:	fa f4       	brpl	.+62     	; 0x8a2 <__floatsisf+0x6c>
 864:	bb 0f       	add	r27, r27
 866:	11 f4       	brne	.+4      	; 0x86c <__floatsisf+0x36>
 868:	60 ff       	sbrs	r22, 0
 86a:	1b c0       	rjmp	.+54     	; 0x8a2 <__floatsisf+0x6c>
 86c:	6f 5f       	subi	r22, 0xFF	; 255
 86e:	7f 4f       	sbci	r23, 0xFF	; 255
 870:	8f 4f       	sbci	r24, 0xFF	; 255
 872:	9f 4f       	sbci	r25, 0xFF	; 255
 874:	16 c0       	rjmp	.+44     	; 0x8a2 <__floatsisf+0x6c>
 876:	88 23       	and	r24, r24
 878:	11 f0       	breq	.+4      	; 0x87e <__floatsisf+0x48>
 87a:	96 e9       	ldi	r25, 0x96	; 150
 87c:	11 c0       	rjmp	.+34     	; 0x8a0 <__floatsisf+0x6a>
 87e:	77 23       	and	r23, r23
 880:	21 f0       	breq	.+8      	; 0x88a <__floatsisf+0x54>
 882:	9e e8       	ldi	r25, 0x8E	; 142
 884:	87 2f       	mov	r24, r23
 886:	76 2f       	mov	r23, r22
 888:	05 c0       	rjmp	.+10     	; 0x894 <__floatsisf+0x5e>
 88a:	66 23       	and	r22, r22
 88c:	71 f0       	breq	.+28     	; 0x8aa <__floatsisf+0x74>
 88e:	96 e8       	ldi	r25, 0x86	; 134
 890:	86 2f       	mov	r24, r22
 892:	70 e0       	ldi	r23, 0x00	; 0
 894:	60 e0       	ldi	r22, 0x00	; 0
 896:	2a f0       	brmi	.+10     	; 0x8a2 <__floatsisf+0x6c>
 898:	9a 95       	dec	r25
 89a:	66 0f       	add	r22, r22
 89c:	77 1f       	adc	r23, r23
 89e:	88 1f       	adc	r24, r24
 8a0:	da f7       	brpl	.-10     	; 0x898 <__floatsisf+0x62>
 8a2:	88 0f       	add	r24, r24
 8a4:	96 95       	lsr	r25
 8a6:	87 95       	ror	r24
 8a8:	97 f9       	bld	r25, 7
 8aa:	08 95       	ret

000008ac <__fp_cmp>:
 8ac:	99 0f       	add	r25, r25
 8ae:	00 08       	sbc	r0, r0
 8b0:	55 0f       	add	r21, r21
 8b2:	aa 0b       	sbc	r26, r26
 8b4:	e0 e8       	ldi	r30, 0x80	; 128
 8b6:	fe ef       	ldi	r31, 0xFE	; 254
 8b8:	16 16       	cp	r1, r22
 8ba:	17 06       	cpc	r1, r23
 8bc:	e8 07       	cpc	r30, r24
 8be:	f9 07       	cpc	r31, r25
 8c0:	c0 f0       	brcs	.+48     	; 0x8f2 <__fp_cmp+0x46>
 8c2:	12 16       	cp	r1, r18
 8c4:	13 06       	cpc	r1, r19
 8c6:	e4 07       	cpc	r30, r20
 8c8:	f5 07       	cpc	r31, r21
 8ca:	98 f0       	brcs	.+38     	; 0x8f2 <__fp_cmp+0x46>
 8cc:	62 1b       	sub	r22, r18
 8ce:	73 0b       	sbc	r23, r19
 8d0:	84 0b       	sbc	r24, r20
 8d2:	95 0b       	sbc	r25, r21
 8d4:	39 f4       	brne	.+14     	; 0x8e4 <__fp_cmp+0x38>
 8d6:	0a 26       	eor	r0, r26
 8d8:	61 f0       	breq	.+24     	; 0x8f2 <__fp_cmp+0x46>
 8da:	23 2b       	or	r18, r19
 8dc:	24 2b       	or	r18, r20
 8de:	25 2b       	or	r18, r21
 8e0:	21 f4       	brne	.+8      	; 0x8ea <__fp_cmp+0x3e>
 8e2:	08 95       	ret
 8e4:	0a 26       	eor	r0, r26
 8e6:	09 f4       	brne	.+2      	; 0x8ea <__fp_cmp+0x3e>
 8e8:	a1 40       	sbci	r26, 0x01	; 1
 8ea:	a6 95       	lsr	r26
 8ec:	8f ef       	ldi	r24, 0xFF	; 255
 8ee:	81 1d       	adc	r24, r1
 8f0:	81 1d       	adc	r24, r1
 8f2:	08 95       	ret

000008f4 <__mulsf3>:
 8f4:	0e 94 8d 04 	call	0x91a	; 0x91a <__mulsf3x>
 8f8:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__fp_round>
 8fc:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__fp_pscA>
 900:	38 f0       	brcs	.+14     	; 0x910 <__mulsf3+0x1c>
 902:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__fp_pscB>
 906:	20 f0       	brcs	.+8      	; 0x910 <__mulsf3+0x1c>
 908:	95 23       	and	r25, r21
 90a:	11 f0       	breq	.+4      	; 0x910 <__mulsf3+0x1c>
 90c:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_inf>
 910:	0c 94 f0 04 	jmp	0x9e0	; 0x9e0 <__fp_nan>
 914:	11 24       	eor	r1, r1
 916:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_szero>

0000091a <__mulsf3x>:
 91a:	0e 94 12 05 	call	0xa24	; 0xa24 <__fp_split3>
 91e:	70 f3       	brcs	.-36     	; 0x8fc <__mulsf3+0x8>

00000920 <__mulsf3_pse>:
 920:	95 9f       	mul	r25, r21
 922:	c1 f3       	breq	.-16     	; 0x914 <__mulsf3+0x20>
 924:	95 0f       	add	r25, r21
 926:	50 e0       	ldi	r21, 0x00	; 0
 928:	55 1f       	adc	r21, r21
 92a:	62 9f       	mul	r22, r18
 92c:	f0 01       	movw	r30, r0
 92e:	72 9f       	mul	r23, r18
 930:	bb 27       	eor	r27, r27
 932:	f0 0d       	add	r31, r0
 934:	b1 1d       	adc	r27, r1
 936:	63 9f       	mul	r22, r19
 938:	aa 27       	eor	r26, r26
 93a:	f0 0d       	add	r31, r0
 93c:	b1 1d       	adc	r27, r1
 93e:	aa 1f       	adc	r26, r26
 940:	64 9f       	mul	r22, r20
 942:	66 27       	eor	r22, r22
 944:	b0 0d       	add	r27, r0
 946:	a1 1d       	adc	r26, r1
 948:	66 1f       	adc	r22, r22
 94a:	82 9f       	mul	r24, r18
 94c:	22 27       	eor	r18, r18
 94e:	b0 0d       	add	r27, r0
 950:	a1 1d       	adc	r26, r1
 952:	62 1f       	adc	r22, r18
 954:	73 9f       	mul	r23, r19
 956:	b0 0d       	add	r27, r0
 958:	a1 1d       	adc	r26, r1
 95a:	62 1f       	adc	r22, r18
 95c:	83 9f       	mul	r24, r19
 95e:	a0 0d       	add	r26, r0
 960:	61 1d       	adc	r22, r1
 962:	22 1f       	adc	r18, r18
 964:	74 9f       	mul	r23, r20
 966:	33 27       	eor	r19, r19
 968:	a0 0d       	add	r26, r0
 96a:	61 1d       	adc	r22, r1
 96c:	23 1f       	adc	r18, r19
 96e:	84 9f       	mul	r24, r20
 970:	60 0d       	add	r22, r0
 972:	21 1d       	adc	r18, r1
 974:	82 2f       	mov	r24, r18
 976:	76 2f       	mov	r23, r22
 978:	6a 2f       	mov	r22, r26
 97a:	11 24       	eor	r1, r1
 97c:	9f 57       	subi	r25, 0x7F	; 127
 97e:	50 40       	sbci	r21, 0x00	; 0
 980:	9a f0       	brmi	.+38     	; 0x9a8 <__mulsf3_pse+0x88>
 982:	f1 f0       	breq	.+60     	; 0x9c0 <__mulsf3_pse+0xa0>
 984:	88 23       	and	r24, r24
 986:	4a f0       	brmi	.+18     	; 0x99a <__mulsf3_pse+0x7a>
 988:	ee 0f       	add	r30, r30
 98a:	ff 1f       	adc	r31, r31
 98c:	bb 1f       	adc	r27, r27
 98e:	66 1f       	adc	r22, r22
 990:	77 1f       	adc	r23, r23
 992:	88 1f       	adc	r24, r24
 994:	91 50       	subi	r25, 0x01	; 1
 996:	50 40       	sbci	r21, 0x00	; 0
 998:	a9 f7       	brne	.-22     	; 0x984 <__mulsf3_pse+0x64>
 99a:	9e 3f       	cpi	r25, 0xFE	; 254
 99c:	51 05       	cpc	r21, r1
 99e:	80 f0       	brcs	.+32     	; 0x9c0 <__mulsf3_pse+0xa0>
 9a0:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_inf>
 9a4:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_szero>
 9a8:	5f 3f       	cpi	r21, 0xFF	; 255
 9aa:	e4 f3       	brlt	.-8      	; 0x9a4 <__mulsf3_pse+0x84>
 9ac:	98 3e       	cpi	r25, 0xE8	; 232
 9ae:	d4 f3       	brlt	.-12     	; 0x9a4 <__mulsf3_pse+0x84>
 9b0:	86 95       	lsr	r24
 9b2:	77 95       	ror	r23
 9b4:	67 95       	ror	r22
 9b6:	b7 95       	ror	r27
 9b8:	f7 95       	ror	r31
 9ba:	e7 95       	ror	r30
 9bc:	9f 5f       	subi	r25, 0xFF	; 255
 9be:	c1 f7       	brne	.-16     	; 0x9b0 <__mulsf3_pse+0x90>
 9c0:	fe 2b       	or	r31, r30
 9c2:	88 0f       	add	r24, r24
 9c4:	91 1d       	adc	r25, r1
 9c6:	96 95       	lsr	r25
 9c8:	87 95       	ror	r24
 9ca:	97 f9       	bld	r25, 7
 9cc:	08 95       	ret

000009ce <__ctype_isfalse>:
 9ce:	99 27       	eor	r25, r25
 9d0:	88 27       	eor	r24, r24

000009d2 <__ctype_istrue>:
 9d2:	08 95       	ret

000009d4 <__fp_inf>:
 9d4:	97 f9       	bld	r25, 7
 9d6:	9f 67       	ori	r25, 0x7F	; 127
 9d8:	80 e8       	ldi	r24, 0x80	; 128
 9da:	70 e0       	ldi	r23, 0x00	; 0
 9dc:	60 e0       	ldi	r22, 0x00	; 0
 9de:	08 95       	ret

000009e0 <__fp_nan>:
 9e0:	9f ef       	ldi	r25, 0xFF	; 255
 9e2:	80 ec       	ldi	r24, 0xC0	; 192
 9e4:	08 95       	ret

000009e6 <__fp_pscA>:
 9e6:	00 24       	eor	r0, r0
 9e8:	0a 94       	dec	r0
 9ea:	16 16       	cp	r1, r22
 9ec:	17 06       	cpc	r1, r23
 9ee:	18 06       	cpc	r1, r24
 9f0:	09 06       	cpc	r0, r25
 9f2:	08 95       	ret

000009f4 <__fp_pscB>:
 9f4:	00 24       	eor	r0, r0
 9f6:	0a 94       	dec	r0
 9f8:	12 16       	cp	r1, r18
 9fa:	13 06       	cpc	r1, r19
 9fc:	14 06       	cpc	r1, r20
 9fe:	05 06       	cpc	r0, r21
 a00:	08 95       	ret

00000a02 <__fp_round>:
 a02:	09 2e       	mov	r0, r25
 a04:	03 94       	inc	r0
 a06:	00 0c       	add	r0, r0
 a08:	11 f4       	brne	.+4      	; 0xa0e <__fp_round+0xc>
 a0a:	88 23       	and	r24, r24
 a0c:	52 f0       	brmi	.+20     	; 0xa22 <__fp_round+0x20>
 a0e:	bb 0f       	add	r27, r27
 a10:	40 f4       	brcc	.+16     	; 0xa22 <__fp_round+0x20>
 a12:	bf 2b       	or	r27, r31
 a14:	11 f4       	brne	.+4      	; 0xa1a <__fp_round+0x18>
 a16:	60 ff       	sbrs	r22, 0
 a18:	04 c0       	rjmp	.+8      	; 0xa22 <__fp_round+0x20>
 a1a:	6f 5f       	subi	r22, 0xFF	; 255
 a1c:	7f 4f       	sbci	r23, 0xFF	; 255
 a1e:	8f 4f       	sbci	r24, 0xFF	; 255
 a20:	9f 4f       	sbci	r25, 0xFF	; 255
 a22:	08 95       	ret

00000a24 <__fp_split3>:
 a24:	57 fd       	sbrc	r21, 7
 a26:	90 58       	subi	r25, 0x80	; 128
 a28:	44 0f       	add	r20, r20
 a2a:	55 1f       	adc	r21, r21
 a2c:	59 f0       	breq	.+22     	; 0xa44 <__fp_splitA+0x10>
 a2e:	5f 3f       	cpi	r21, 0xFF	; 255
 a30:	71 f0       	breq	.+28     	; 0xa4e <__fp_splitA+0x1a>
 a32:	47 95       	ror	r20

00000a34 <__fp_splitA>:
 a34:	88 0f       	add	r24, r24
 a36:	97 fb       	bst	r25, 7
 a38:	99 1f       	adc	r25, r25
 a3a:	61 f0       	breq	.+24     	; 0xa54 <__fp_splitA+0x20>
 a3c:	9f 3f       	cpi	r25, 0xFF	; 255
 a3e:	79 f0       	breq	.+30     	; 0xa5e <__fp_splitA+0x2a>
 a40:	87 95       	ror	r24
 a42:	08 95       	ret
 a44:	12 16       	cp	r1, r18
 a46:	13 06       	cpc	r1, r19
 a48:	14 06       	cpc	r1, r20
 a4a:	55 1f       	adc	r21, r21
 a4c:	f2 cf       	rjmp	.-28     	; 0xa32 <__fp_split3+0xe>
 a4e:	46 95       	lsr	r20
 a50:	f1 df       	rcall	.-30     	; 0xa34 <__fp_splitA>
 a52:	08 c0       	rjmp	.+16     	; 0xa64 <__fp_splitA+0x30>
 a54:	16 16       	cp	r1, r22
 a56:	17 06       	cpc	r1, r23
 a58:	18 06       	cpc	r1, r24
 a5a:	99 1f       	adc	r25, r25
 a5c:	f1 cf       	rjmp	.-30     	; 0xa40 <__fp_splitA+0xc>
 a5e:	86 95       	lsr	r24
 a60:	71 05       	cpc	r23, r1
 a62:	61 05       	cpc	r22, r1
 a64:	08 94       	sec
 a66:	08 95       	ret

00000a68 <__fp_zero>:
 a68:	e8 94       	clt

00000a6a <__fp_szero>:
 a6a:	bb 27       	eor	r27, r27
 a6c:	66 27       	eor	r22, r22
 a6e:	77 27       	eor	r23, r23
 a70:	cb 01       	movw	r24, r22
 a72:	97 f9       	bld	r25, 7
 a74:	08 95       	ret

00000a76 <__muluhisi3>:
 a76:	0e 94 7d 05 	call	0xafa	; 0xafa <__umulhisi3>
 a7a:	a5 9f       	mul	r26, r21
 a7c:	90 0d       	add	r25, r0
 a7e:	b4 9f       	mul	r27, r20
 a80:	90 0d       	add	r25, r0
 a82:	a4 9f       	mul	r26, r20
 a84:	80 0d       	add	r24, r0
 a86:	91 1d       	adc	r25, r1
 a88:	11 24       	eor	r1, r1
 a8a:	08 95       	ret

00000a8c <__prologue_saves__>:
 a8c:	2f 92       	push	r2
 a8e:	3f 92       	push	r3
 a90:	4f 92       	push	r4
 a92:	5f 92       	push	r5
 a94:	6f 92       	push	r6
 a96:	7f 92       	push	r7
 a98:	8f 92       	push	r8
 a9a:	9f 92       	push	r9
 a9c:	af 92       	push	r10
 a9e:	bf 92       	push	r11
 aa0:	cf 92       	push	r12
 aa2:	df 92       	push	r13
 aa4:	ef 92       	push	r14
 aa6:	ff 92       	push	r15
 aa8:	0f 93       	push	r16
 aaa:	1f 93       	push	r17
 aac:	cf 93       	push	r28
 aae:	df 93       	push	r29
 ab0:	cd b7       	in	r28, 0x3d	; 61
 ab2:	de b7       	in	r29, 0x3e	; 62
 ab4:	ca 1b       	sub	r28, r26
 ab6:	db 0b       	sbc	r29, r27
 ab8:	0f b6       	in	r0, 0x3f	; 63
 aba:	f8 94       	cli
 abc:	de bf       	out	0x3e, r29	; 62
 abe:	0f be       	out	0x3f, r0	; 63
 ac0:	cd bf       	out	0x3d, r28	; 61
 ac2:	09 94       	ijmp

00000ac4 <__epilogue_restores__>:
 ac4:	2a 88       	ldd	r2, Y+18	; 0x12
 ac6:	39 88       	ldd	r3, Y+17	; 0x11
 ac8:	48 88       	ldd	r4, Y+16	; 0x10
 aca:	5f 84       	ldd	r5, Y+15	; 0x0f
 acc:	6e 84       	ldd	r6, Y+14	; 0x0e
 ace:	7d 84       	ldd	r7, Y+13	; 0x0d
 ad0:	8c 84       	ldd	r8, Y+12	; 0x0c
 ad2:	9b 84       	ldd	r9, Y+11	; 0x0b
 ad4:	aa 84       	ldd	r10, Y+10	; 0x0a
 ad6:	b9 84       	ldd	r11, Y+9	; 0x09
 ad8:	c8 84       	ldd	r12, Y+8	; 0x08
 ada:	df 80       	ldd	r13, Y+7	; 0x07
 adc:	ee 80       	ldd	r14, Y+6	; 0x06
 ade:	fd 80       	ldd	r15, Y+5	; 0x05
 ae0:	0c 81       	ldd	r16, Y+4	; 0x04
 ae2:	1b 81       	ldd	r17, Y+3	; 0x03
 ae4:	aa 81       	ldd	r26, Y+2	; 0x02
 ae6:	b9 81       	ldd	r27, Y+1	; 0x01
 ae8:	ce 0f       	add	r28, r30
 aea:	d1 1d       	adc	r29, r1
 aec:	0f b6       	in	r0, 0x3f	; 63
 aee:	f8 94       	cli
 af0:	de bf       	out	0x3e, r29	; 62
 af2:	0f be       	out	0x3f, r0	; 63
 af4:	cd bf       	out	0x3d, r28	; 61
 af6:	ed 01       	movw	r28, r26
 af8:	08 95       	ret

00000afa <__umulhisi3>:
 afa:	a2 9f       	mul	r26, r18
 afc:	b0 01       	movw	r22, r0
 afe:	b3 9f       	mul	r27, r19
 b00:	c0 01       	movw	r24, r0
 b02:	a3 9f       	mul	r26, r19
 b04:	70 0d       	add	r23, r0
 b06:	81 1d       	adc	r24, r1
 b08:	11 24       	eor	r1, r1
 b0a:	91 1d       	adc	r25, r1
 b0c:	b2 9f       	mul	r27, r18
 b0e:	70 0d       	add	r23, r0
 b10:	81 1d       	adc	r24, r1
 b12:	11 24       	eor	r1, r1
 b14:	91 1d       	adc	r25, r1
 b16:	08 95       	ret

00000b18 <_exit>:
 b18:	f8 94       	cli

00000b1a <__stop_program>:
 b1a:	ff cf       	rjmp	.-2      	; 0xb1a <__stop_program>
