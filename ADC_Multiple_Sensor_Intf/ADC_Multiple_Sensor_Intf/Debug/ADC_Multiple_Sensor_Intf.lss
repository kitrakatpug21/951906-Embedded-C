
ADC_Multiple_Sensor_Intf.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ca6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000038  00800060  00000ca6  00000d1a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000d52  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000db0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000dec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b7b  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b2  00000000  00000000  000019b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000049b  00000000  00000000  00002069  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a0  00000000  00000000  00002504  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c7  00000000  00000000  000025a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005a3  00000000  00000000  0000296b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002f0e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ea       	ldi	r30, 0xA6	; 166
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 39       	cpi	r26, 0x98	; 152
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <main>
  7a:	0c 94 51 06 	jmp	0xca2	; 0xca2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_config>:
#define F_CPU 8000000UL
#include <util/delay.h>
#include <stdio.h>

void LCD_config(uint8_t cmd){
	PORTC &= ~(0b00000001);// RS = 0
  82:	95 b3       	in	r25, 0x15	; 21
  84:	9e 7f       	andi	r25, 0xFE	; 254
  86:	95 bb       	out	0x15, r25	; 21
	PORTC = (PORTC & 0x0F) | (cmd & 0xF0);
  88:	95 b3       	in	r25, 0x15	; 21
  8a:	9f 70       	andi	r25, 0x0F	; 15
  8c:	28 2f       	mov	r18, r24
  8e:	20 7f       	andi	r18, 0xF0	; 240
  90:	92 2b       	or	r25, r18
  92:	95 bb       	out	0x15, r25	; 21
	PORTC |= (0b00000010); // EN = 1
  94:	95 b3       	in	r25, 0x15	; 21
  96:	92 60       	ori	r25, 0x02	; 2
  98:	95 bb       	out	0x15, r25	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	ef e1       	ldi	r30, 0x1F	; 31
  9c:	fe e4       	ldi	r31, 0x4E	; 78
  9e:	31 97       	sbiw	r30, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <LCD_config+0x1c>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <LCD_config+0x22>
  a4:	00 00       	nop
	_delay_ms(10);
	PORTC &= ~(0b00000010); // EN = 0
  a6:	95 b3       	in	r25, 0x15	; 21
  a8:	9d 7f       	andi	r25, 0xFD	; 253
  aa:	95 bb       	out	0x15, r25	; 21
  ac:	ef e1       	ldi	r30, 0x1F	; 31
  ae:	fe e4       	ldi	r31, 0x4E	; 78
  b0:	31 97       	sbiw	r30, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <LCD_config+0x2e>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <LCD_config+0x34>
  b6:	00 00       	nop
	_delay_ms(10);
	// END OF UPPER NIBBLE (4bit) OF COMMAND
	PORTC &= ~(0b00000001);// RS = 0
  b8:	95 b3       	in	r25, 0x15	; 21
  ba:	9e 7f       	andi	r25, 0xFE	; 254
  bc:	95 bb       	out	0x15, r25	; 21
	PORTC = (PORTC & 0x0F) | ((cmd<<4) & 0xF0);
  be:	25 b3       	in	r18, 0x15	; 21
  c0:	f0 e1       	ldi	r31, 0x10	; 16
  c2:	8f 9f       	mul	r24, r31
  c4:	c0 01       	movw	r24, r0
  c6:	11 24       	eor	r1, r1
  c8:	92 2f       	mov	r25, r18
  ca:	9f 70       	andi	r25, 0x0F	; 15
  cc:	89 2b       	or	r24, r25
  ce:	85 bb       	out	0x15, r24	; 21
	PORTC |= (0b00000010); // EN = 1
  d0:	85 b3       	in	r24, 0x15	; 21
  d2:	82 60       	ori	r24, 0x02	; 2
  d4:	85 bb       	out	0x15, r24	; 21
  d6:	8f e1       	ldi	r24, 0x1F	; 31
  d8:	9e e4       	ldi	r25, 0x4E	; 78
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <LCD_config+0x58>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <LCD_config+0x5e>
  e0:	00 00       	nop
	_delay_ms(10);
	PORTC &= ~(0b00000010); // EN = 0
  e2:	85 b3       	in	r24, 0x15	; 21
  e4:	8d 7f       	andi	r24, 0xFD	; 253
  e6:	85 bb       	out	0x15, r24	; 21
  e8:	ef e1       	ldi	r30, 0x1F	; 31
  ea:	fe e4       	ldi	r31, 0x4E	; 78
  ec:	31 97       	sbiw	r30, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <LCD_config+0x6a>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <LCD_config+0x70>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <LCD_char>:
	_delay_ms(10);
	// END OF LOWER NIBBLE (4bit) OF COMMAND
}
void LCD_char(char data){
	PORTC |= (0b00000001);// RS = 1
  f6:	95 b3       	in	r25, 0x15	; 21
  f8:	91 60       	ori	r25, 0x01	; 1
  fa:	95 bb       	out	0x15, r25	; 21
	PORTC = (PORTC & 0x0F) | (data & 0xF0);
  fc:	95 b3       	in	r25, 0x15	; 21
  fe:	9f 70       	andi	r25, 0x0F	; 15
 100:	28 2f       	mov	r18, r24
 102:	20 7f       	andi	r18, 0xF0	; 240
 104:	92 2b       	or	r25, r18
 106:	95 bb       	out	0x15, r25	; 21
	PORTC |= (0b00000010); // EN = 1
 108:	95 b3       	in	r25, 0x15	; 21
 10a:	92 60       	ori	r25, 0x02	; 2
 10c:	95 bb       	out	0x15, r25	; 21
 10e:	ef e1       	ldi	r30, 0x1F	; 31
 110:	fe e4       	ldi	r31, 0x4E	; 78
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <LCD_char+0x1c>
 116:	00 c0       	rjmp	.+0      	; 0x118 <LCD_char+0x22>
 118:	00 00       	nop
	_delay_ms(10);
	PORTC &= ~(0b00000010); // EN = 0
 11a:	95 b3       	in	r25, 0x15	; 21
 11c:	9d 7f       	andi	r25, 0xFD	; 253
 11e:	95 bb       	out	0x15, r25	; 21
 120:	ef e1       	ldi	r30, 0x1F	; 31
 122:	fe e4       	ldi	r31, 0x4E	; 78
 124:	31 97       	sbiw	r30, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <LCD_char+0x2e>
 128:	00 c0       	rjmp	.+0      	; 0x12a <LCD_char+0x34>
 12a:	00 00       	nop
	_delay_ms(10);
	// END OF UPPER NIBBLE (4bit) OF DATA
	PORTC |= (0b00000001);// RS = 1
 12c:	95 b3       	in	r25, 0x15	; 21
 12e:	91 60       	ori	r25, 0x01	; 1
 130:	95 bb       	out	0x15, r25	; 21
	PORTC = (PORTC & 0x0F) | ((data<<4) & 0xF0);
 132:	25 b3       	in	r18, 0x15	; 21
 134:	f0 e1       	ldi	r31, 0x10	; 16
 136:	8f 9f       	mul	r24, r31
 138:	c0 01       	movw	r24, r0
 13a:	11 24       	eor	r1, r1
 13c:	92 2f       	mov	r25, r18
 13e:	9f 70       	andi	r25, 0x0F	; 15
 140:	89 2b       	or	r24, r25
 142:	85 bb       	out	0x15, r24	; 21
	PORTC |= (0b00000010); // EN = 1
 144:	85 b3       	in	r24, 0x15	; 21
 146:	82 60       	ori	r24, 0x02	; 2
 148:	85 bb       	out	0x15, r24	; 21
 14a:	8f e1       	ldi	r24, 0x1F	; 31
 14c:	9e e4       	ldi	r25, 0x4E	; 78
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <LCD_char+0x58>
 152:	00 c0       	rjmp	.+0      	; 0x154 <LCD_char+0x5e>
 154:	00 00       	nop
	_delay_ms(10);
	PORTC &= ~(0b00000010); // EN = 0
 156:	85 b3       	in	r24, 0x15	; 21
 158:	8d 7f       	andi	r24, 0xFD	; 253
 15a:	85 bb       	out	0x15, r24	; 21
 15c:	ef e1       	ldi	r30, 0x1F	; 31
 15e:	fe e4       	ldi	r31, 0x4E	; 78
 160:	31 97       	sbiw	r30, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <LCD_char+0x6a>
 164:	00 c0       	rjmp	.+0      	; 0x166 <LCD_char+0x70>
 166:	00 00       	nop
 168:	08 95       	ret

0000016a <LCD_initiate>:
 16a:	2f ef       	ldi	r18, 0xFF	; 255
 16c:	82 e5       	ldi	r24, 0x52	; 82
 16e:	97 e0       	ldi	r25, 0x07	; 7
 170:	21 50       	subi	r18, 0x01	; 1
 172:	80 40       	sbci	r24, 0x00	; 0
 174:	90 40       	sbci	r25, 0x00	; 0
 176:	e1 f7       	brne	.-8      	; 0x170 <LCD_initiate+0x6>
 178:	00 c0       	rjmp	.+0      	; 0x17a <LCD_initiate+0x10>
 17a:	00 00       	nop
	// END OF LOWER NIBBLE (4bit) OF DATA
}
void LCD_initiate(){
	_delay_ms(300);
	//LCD_config(0x38);// 8 bit mode
	LCD_config(0x33);LCD_config(0x32); // to sync the UPPER PORT OF LCDs and turn off LOWER PORT
 17c:	83 e3       	ldi	r24, 0x33	; 51
 17e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 182:	82 e3       	ldi	r24, 0x32	; 50
 184:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
	LCD_config(0x28);// 4-bit 16 character 2 row mode
 188:	88 e2       	ldi	r24, 0x28	; 40
 18a:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
	LCD_config(0x0C);
 18e:	8c e0       	ldi	r24, 0x0C	; 12
 190:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
	LCD_config(0x01);
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 19a:	8f ec       	ldi	r24, 0xCF	; 207
 19c:	97 e0       	ldi	r25, 0x07	; 7
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <LCD_initiate+0x34>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <LCD_initiate+0x3a>
 1a4:	00 00       	nop
	_delay_ms(1);
	LCD_config(0x06);
 1a6:	86 e0       	ldi	r24, 0x06	; 6
 1a8:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
	LCD_config(0x80);
 1ac:	80 e8       	ldi	r24, 0x80	; 128
 1ae:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 1b2:	08 95       	ret

000001b4 <LCD_Print>:
}

void LCD_Print(char *str)
{
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	ec 01       	movw	r28, r24
	while (*str != '\0')
 1ba:	03 c0       	rjmp	.+6      	; 0x1c2 <LCD_Print+0xe>
	{
		LCD_char(*str);
 1bc:	0e 94 7b 00 	call	0xf6	; 0xf6 <LCD_char>
		str++;
 1c0:	21 96       	adiw	r28, 0x01	; 1
	LCD_config(0x80);
}

void LCD_Print(char *str)
{
	while (*str != '\0')
 1c2:	88 81       	ld	r24, Y
 1c4:	81 11       	cpse	r24, r1
 1c6:	fa cf       	rjmp	.-12     	; 0x1bc <LCD_Print+0x8>
	{
		LCD_char(*str);
		str++;
	}
}
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	08 95       	ret

000001ce <ADC_Init>:
///////////////////////////////////////////////

void ADC_Init(uint8_t channel)
{
	///// ADC Setting ////////
	ADMUX = 0b01000000 | channel; // ADC: Single Ended MOde, LSB-MSB, Ext Ref Volt
 1ce:	80 64       	ori	r24, 0x40	; 64
 1d0:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000110; // ADC: ADC Mode, Prescale by 64
 1d2:	86 e8       	ldi	r24, 0x86	; 134
 1d4:	86 b9       	out	0x06, r24	; 6
 1d6:	08 95       	ret

000001d8 <ADC_GetResult>:
}

int ADC_GetResult()
{
	ADCSRA = ADCSRA | 0b01000000;// STart bit is set to 1
 1d8:	86 b1       	in	r24, 0x06	; 6
 1da:	80 64       	ori	r24, 0x40	; 64
 1dc:	86 b9       	out	0x06, r24	; 6
	while ((ADCSRA & 0b00010000)==0)
 1de:	34 9b       	sbis	0x06, 4	; 6
 1e0:	fe cf       	rjmp	.-4      	; 0x1de <ADC_GetResult+0x6>
	{/*until the flag is 0, wait here*/}
	return ADC;
 1e2:	84 b1       	in	r24, 0x04	; 4
 1e4:	95 b1       	in	r25, 0x05	; 5
}
 1e6:	08 95       	ret

000001e8 <main>:
int main(void)
{
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	cd b7       	in	r28, 0x3d	; 61
 1ee:	de b7       	in	r29, 0x3e	; 62
 1f0:	60 97       	sbiw	r28, 0x10	; 16
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	f8 94       	cli
 1f6:	de bf       	out	0x3e, r29	; 62
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0b00000000; // ADC Input on PORTA
 1fc:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0b11111111;// LCD on PORTC
 1fe:	8f ef       	ldi	r24, 0xFF	; 255
 200:	84 bb       	out	0x14, r24	; 20
	LCD_initiate();
 202:	0e 94 b5 00 	call	0x16a	; 0x16a <LCD_initiate>
	int volt_d=0;
	int volt_f=0;
	char array[16];
	while (1)
	{
		ADC_Init(0);
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ADC_Init>
		volt_d = (int)(4.887*ADC_GetResult()) / 1000;
 20c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ADC_GetResult>
 210:	bc 01       	movw	r22, r24
 212:	99 0f       	add	r25, r25
 214:	88 0b       	sbc	r24, r24
 216:	99 0b       	sbc	r25, r25
 218:	0e 94 46 02 	call	0x48c	; 0x48c <__floatsisf>
 21c:	2e e4       	ldi	r18, 0x4E	; 78
 21e:	32 e6       	ldi	r19, 0x62	; 98
 220:	4c e9       	ldi	r20, 0x9C	; 156
 222:	50 e4       	ldi	r21, 0x40	; 64
 224:	0e 94 aa 02 	call	0x554	; 0x554 <__mulsf3>
 228:	0e 94 0e 02 	call	0x41c	; 0x41c <__fixsfsi>
 22c:	0f 2e       	mov	r0, r31
 22e:	f8 ee       	ldi	r31, 0xE8	; 232
 230:	ef 2e       	mov	r14, r31
 232:	f3 e0       	ldi	r31, 0x03	; 3
 234:	ff 2e       	mov	r15, r31
 236:	f0 2d       	mov	r31, r0
 238:	cb 01       	movw	r24, r22
 23a:	b7 01       	movw	r22, r14
 23c:	0e 94 3f 03 	call	0x67e	; 0x67e <__divmodhi4>
 240:	16 2f       	mov	r17, r22
 242:	07 2f       	mov	r16, r23
		volt_f = (int)(4.887*ADC_GetResult()) % 1000;
 244:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ADC_GetResult>
 248:	bc 01       	movw	r22, r24
 24a:	99 0f       	add	r25, r25
 24c:	88 0b       	sbc	r24, r24
 24e:	99 0b       	sbc	r25, r25
 250:	0e 94 46 02 	call	0x48c	; 0x48c <__floatsisf>
 254:	2e e4       	ldi	r18, 0x4E	; 78
 256:	32 e6       	ldi	r19, 0x62	; 98
 258:	4c e9       	ldi	r20, 0x9C	; 156
 25a:	50 e4       	ldi	r21, 0x40	; 64
 25c:	0e 94 aa 02 	call	0x554	; 0x554 <__mulsf3>
 260:	0e 94 0e 02 	call	0x41c	; 0x41c <__fixsfsi>
 264:	cb 01       	movw	r24, r22
 266:	b7 01       	movw	r22, r14
 268:	0e 94 3f 03 	call	0x67e	; 0x67e <__divmodhi4>
		sprintf(array,"ADC0: %d.%dV ",volt_d,volt_f);
 26c:	9f 93       	push	r25
 26e:	8f 93       	push	r24
 270:	0f 93       	push	r16
 272:	1f 93       	push	r17
 274:	80 e6       	ldi	r24, 0x60	; 96
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	9f 93       	push	r25
 27a:	8f 93       	push	r24
 27c:	8e 01       	movw	r16, r28
 27e:	0f 5f       	subi	r16, 0xFF	; 255
 280:	1f 4f       	sbci	r17, 0xFF	; 255
 282:	1f 93       	push	r17
 284:	0f 93       	push	r16
 286:	0e 94 67 03 	call	0x6ce	; 0x6ce <sprintf>
		LCD_config(0x80); LCD_Print(array);
 28a:	80 e8       	ldi	r24, 0x80	; 128
 28c:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 290:	c8 01       	movw	r24, r16
 292:	0e 94 da 00 	call	0x1b4	; 0x1b4 <LCD_Print>
		ADC_Init(2);
 296:	82 e0       	ldi	r24, 0x02	; 2
 298:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ADC_Init>
		volt_d = (int)(4.887*ADC_GetResult()) / 1000;
 29c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ADC_GetResult>
 2a0:	bc 01       	movw	r22, r24
 2a2:	99 0f       	add	r25, r25
 2a4:	88 0b       	sbc	r24, r24
 2a6:	99 0b       	sbc	r25, r25
 2a8:	0e 94 46 02 	call	0x48c	; 0x48c <__floatsisf>
 2ac:	2e e4       	ldi	r18, 0x4E	; 78
 2ae:	32 e6       	ldi	r19, 0x62	; 98
 2b0:	4c e9       	ldi	r20, 0x9C	; 156
 2b2:	50 e4       	ldi	r21, 0x40	; 64
 2b4:	0e 94 aa 02 	call	0x554	; 0x554 <__mulsf3>
 2b8:	0e 94 0e 02 	call	0x41c	; 0x41c <__fixsfsi>
 2bc:	cb 01       	movw	r24, r22
 2be:	b7 01       	movw	r22, r14
 2c0:	0e 94 3f 03 	call	0x67e	; 0x67e <__divmodhi4>
 2c4:	d6 2e       	mov	r13, r22
 2c6:	c7 2e       	mov	r12, r23
		volt_f = (int)(4.887*ADC_GetResult()) % 1000;
 2c8:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ADC_GetResult>
 2cc:	bc 01       	movw	r22, r24
 2ce:	99 0f       	add	r25, r25
 2d0:	88 0b       	sbc	r24, r24
 2d2:	99 0b       	sbc	r25, r25
 2d4:	0e 94 46 02 	call	0x48c	; 0x48c <__floatsisf>
 2d8:	2e e4       	ldi	r18, 0x4E	; 78
 2da:	32 e6       	ldi	r19, 0x62	; 98
 2dc:	4c e9       	ldi	r20, 0x9C	; 156
 2de:	50 e4       	ldi	r21, 0x40	; 64
 2e0:	0e 94 aa 02 	call	0x554	; 0x554 <__mulsf3>
 2e4:	0e 94 0e 02 	call	0x41c	; 0x41c <__fixsfsi>
 2e8:	cb 01       	movw	r24, r22
 2ea:	b7 01       	movw	r22, r14
 2ec:	0e 94 3f 03 	call	0x67e	; 0x67e <__divmodhi4>
		sprintf(array,"ADC2: %d.%dV ",volt_d,volt_f);
 2f0:	9f 93       	push	r25
 2f2:	8f 93       	push	r24
 2f4:	cf 92       	push	r12
 2f6:	df 92       	push	r13
 2f8:	8e e6       	ldi	r24, 0x6E	; 110
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	9f 93       	push	r25
 2fe:	8f 93       	push	r24
 300:	1f 93       	push	r17
 302:	0f 93       	push	r16
 304:	0e 94 67 03 	call	0x6ce	; 0x6ce <sprintf>
		LCD_config(0xC0); LCD_Print(array);
 308:	80 ec       	ldi	r24, 0xC0	; 192
 30a:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 30e:	c8 01       	movw	r24, r16
 310:	0e 94 da 00 	call	0x1b4	; 0x1b4 <LCD_Print>
		ADC_Init(4);
 314:	84 e0       	ldi	r24, 0x04	; 4
 316:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ADC_Init>
		volt_d = (int)(4.887*ADC_GetResult()) / 1000;
 31a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ADC_GetResult>
 31e:	bc 01       	movw	r22, r24
 320:	99 0f       	add	r25, r25
 322:	88 0b       	sbc	r24, r24
 324:	99 0b       	sbc	r25, r25
 326:	0e 94 46 02 	call	0x48c	; 0x48c <__floatsisf>
 32a:	2e e4       	ldi	r18, 0x4E	; 78
 32c:	32 e6       	ldi	r19, 0x62	; 98
 32e:	4c e9       	ldi	r20, 0x9C	; 156
 330:	50 e4       	ldi	r21, 0x40	; 64
 332:	0e 94 aa 02 	call	0x554	; 0x554 <__mulsf3>
 336:	0e 94 0e 02 	call	0x41c	; 0x41c <__fixsfsi>
 33a:	cb 01       	movw	r24, r22
 33c:	b7 01       	movw	r22, r14
 33e:	0e 94 3f 03 	call	0x67e	; 0x67e <__divmodhi4>
 342:	d6 2e       	mov	r13, r22
 344:	c7 2e       	mov	r12, r23
		volt_f = (int)(4.887*ADC_GetResult()) % 1000;
 346:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ADC_GetResult>
 34a:	bc 01       	movw	r22, r24
 34c:	99 0f       	add	r25, r25
 34e:	88 0b       	sbc	r24, r24
 350:	99 0b       	sbc	r25, r25
 352:	0e 94 46 02 	call	0x48c	; 0x48c <__floatsisf>
 356:	2e e4       	ldi	r18, 0x4E	; 78
 358:	32 e6       	ldi	r19, 0x62	; 98
 35a:	4c e9       	ldi	r20, 0x9C	; 156
 35c:	50 e4       	ldi	r21, 0x40	; 64
 35e:	0e 94 aa 02 	call	0x554	; 0x554 <__mulsf3>
 362:	0e 94 0e 02 	call	0x41c	; 0x41c <__fixsfsi>
 366:	cb 01       	movw	r24, r22
 368:	b7 01       	movw	r22, r14
 36a:	0e 94 3f 03 	call	0x67e	; 0x67e <__divmodhi4>
		sprintf(array,"ADC4: %d.%dV ",volt_d,volt_f);
 36e:	9f 93       	push	r25
 370:	8f 93       	push	r24
 372:	cf 92       	push	r12
 374:	df 92       	push	r13
 376:	8c e7       	ldi	r24, 0x7C	; 124
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	9f 93       	push	r25
 37c:	8f 93       	push	r24
 37e:	1f 93       	push	r17
 380:	0f 93       	push	r16
 382:	0e 94 67 03 	call	0x6ce	; 0x6ce <sprintf>
		LCD_config(0x90); LCD_Print(array);
 386:	80 e9       	ldi	r24, 0x90	; 144
 388:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 38c:	c8 01       	movw	r24, r16
 38e:	0e 94 da 00 	call	0x1b4	; 0x1b4 <LCD_Print>
		ADC_Init(6);
 392:	86 e0       	ldi	r24, 0x06	; 6
 394:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ADC_Init>
		volt_d = (int)(4.887*ADC_GetResult()) / 1000;
 398:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ADC_GetResult>
 39c:	bc 01       	movw	r22, r24
 39e:	99 0f       	add	r25, r25
 3a0:	88 0b       	sbc	r24, r24
 3a2:	99 0b       	sbc	r25, r25
 3a4:	0e 94 46 02 	call	0x48c	; 0x48c <__floatsisf>
 3a8:	2e e4       	ldi	r18, 0x4E	; 78
 3aa:	32 e6       	ldi	r19, 0x62	; 98
 3ac:	4c e9       	ldi	r20, 0x9C	; 156
 3ae:	50 e4       	ldi	r21, 0x40	; 64
 3b0:	0e 94 aa 02 	call	0x554	; 0x554 <__mulsf3>
 3b4:	0e 94 0e 02 	call	0x41c	; 0x41c <__fixsfsi>
 3b8:	cb 01       	movw	r24, r22
 3ba:	b7 01       	movw	r22, r14
 3bc:	0e 94 3f 03 	call	0x67e	; 0x67e <__divmodhi4>
 3c0:	d6 2e       	mov	r13, r22
 3c2:	c7 2e       	mov	r12, r23
		volt_f = (int)(4.887*ADC_GetResult()) % 1000;
 3c4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ADC_GetResult>
 3c8:	bc 01       	movw	r22, r24
 3ca:	99 0f       	add	r25, r25
 3cc:	88 0b       	sbc	r24, r24
 3ce:	99 0b       	sbc	r25, r25
 3d0:	0e 94 46 02 	call	0x48c	; 0x48c <__floatsisf>
 3d4:	2e e4       	ldi	r18, 0x4E	; 78
 3d6:	32 e6       	ldi	r19, 0x62	; 98
 3d8:	4c e9       	ldi	r20, 0x9C	; 156
 3da:	50 e4       	ldi	r21, 0x40	; 64
 3dc:	0e 94 aa 02 	call	0x554	; 0x554 <__mulsf3>
 3e0:	0e 94 0e 02 	call	0x41c	; 0x41c <__fixsfsi>
 3e4:	cb 01       	movw	r24, r22
 3e6:	b7 01       	movw	r22, r14
 3e8:	0e 94 3f 03 	call	0x67e	; 0x67e <__divmodhi4>
		sprintf(array,"ADC6: %d.%dV ",volt_d,volt_f);
 3ec:	9f 93       	push	r25
 3ee:	8f 93       	push	r24
 3f0:	cf 92       	push	r12
 3f2:	df 92       	push	r13
 3f4:	8a e8       	ldi	r24, 0x8A	; 138
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	9f 93       	push	r25
 3fa:	8f 93       	push	r24
 3fc:	1f 93       	push	r17
 3fe:	0f 93       	push	r16
 400:	0e 94 67 03 	call	0x6ce	; 0x6ce <sprintf>
		LCD_config(0xD0); LCD_Print(array);
 404:	0f b6       	in	r0, 0x3f	; 63
 406:	f8 94       	cli
 408:	de bf       	out	0x3e, r29	; 62
 40a:	0f be       	out	0x3f, r0	; 63
 40c:	cd bf       	out	0x3d, r28	; 61
 40e:	80 ed       	ldi	r24, 0xD0	; 208
 410:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 414:	c8 01       	movw	r24, r16
 416:	0e 94 da 00 	call	0x1b4	; 0x1b4 <LCD_Print>
 41a:	f5 ce       	rjmp	.-534    	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>

0000041c <__fixsfsi>:
 41c:	0e 94 15 02 	call	0x42a	; 0x42a <__fixunssfsi>
 420:	68 94       	set
 422:	b1 11       	cpse	r27, r1
 424:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_szero>
 428:	08 95       	ret

0000042a <__fixunssfsi>:
 42a:	0e 94 89 02 	call	0x512	; 0x512 <__fp_splitA>
 42e:	88 f0       	brcs	.+34     	; 0x452 <__fixunssfsi+0x28>
 430:	9f 57       	subi	r25, 0x7F	; 127
 432:	98 f0       	brcs	.+38     	; 0x45a <__fixunssfsi+0x30>
 434:	b9 2f       	mov	r27, r25
 436:	99 27       	eor	r25, r25
 438:	b7 51       	subi	r27, 0x17	; 23
 43a:	b0 f0       	brcs	.+44     	; 0x468 <__stack+0x9>
 43c:	e1 f0       	breq	.+56     	; 0x476 <__stack+0x17>
 43e:	66 0f       	add	r22, r22
 440:	77 1f       	adc	r23, r23
 442:	88 1f       	adc	r24, r24
 444:	99 1f       	adc	r25, r25
 446:	1a f0       	brmi	.+6      	; 0x44e <__fixunssfsi+0x24>
 448:	ba 95       	dec	r27
 44a:	c9 f7       	brne	.-14     	; 0x43e <__fixunssfsi+0x14>
 44c:	14 c0       	rjmp	.+40     	; 0x476 <__stack+0x17>
 44e:	b1 30       	cpi	r27, 0x01	; 1
 450:	91 f0       	breq	.+36     	; 0x476 <__stack+0x17>
 452:	0e 94 a3 02 	call	0x546	; 0x546 <__fp_zero>
 456:	b1 e0       	ldi	r27, 0x01	; 1
 458:	08 95       	ret
 45a:	0c 94 a3 02 	jmp	0x546	; 0x546 <__fp_zero>
 45e:	67 2f       	mov	r22, r23
 460:	78 2f       	mov	r23, r24
 462:	88 27       	eor	r24, r24
 464:	b8 5f       	subi	r27, 0xF8	; 248
 466:	39 f0       	breq	.+14     	; 0x476 <__stack+0x17>
 468:	b9 3f       	cpi	r27, 0xF9	; 249
 46a:	cc f3       	brlt	.-14     	; 0x45e <__fixunssfsi+0x34>
 46c:	86 95       	lsr	r24
 46e:	77 95       	ror	r23
 470:	67 95       	ror	r22
 472:	b3 95       	inc	r27
 474:	d9 f7       	brne	.-10     	; 0x46c <__stack+0xd>
 476:	3e f4       	brtc	.+14     	; 0x486 <__stack+0x27>
 478:	90 95       	com	r25
 47a:	80 95       	com	r24
 47c:	70 95       	com	r23
 47e:	61 95       	neg	r22
 480:	7f 4f       	sbci	r23, 0xFF	; 255
 482:	8f 4f       	sbci	r24, 0xFF	; 255
 484:	9f 4f       	sbci	r25, 0xFF	; 255
 486:	08 95       	ret

00000488 <__floatunsisf>:
 488:	e8 94       	clt
 48a:	09 c0       	rjmp	.+18     	; 0x49e <__floatsisf+0x12>

0000048c <__floatsisf>:
 48c:	97 fb       	bst	r25, 7
 48e:	3e f4       	brtc	.+14     	; 0x49e <__floatsisf+0x12>
 490:	90 95       	com	r25
 492:	80 95       	com	r24
 494:	70 95       	com	r23
 496:	61 95       	neg	r22
 498:	7f 4f       	sbci	r23, 0xFF	; 255
 49a:	8f 4f       	sbci	r24, 0xFF	; 255
 49c:	9f 4f       	sbci	r25, 0xFF	; 255
 49e:	99 23       	and	r25, r25
 4a0:	a9 f0       	breq	.+42     	; 0x4cc <__floatsisf+0x40>
 4a2:	f9 2f       	mov	r31, r25
 4a4:	96 e9       	ldi	r25, 0x96	; 150
 4a6:	bb 27       	eor	r27, r27
 4a8:	93 95       	inc	r25
 4aa:	f6 95       	lsr	r31
 4ac:	87 95       	ror	r24
 4ae:	77 95       	ror	r23
 4b0:	67 95       	ror	r22
 4b2:	b7 95       	ror	r27
 4b4:	f1 11       	cpse	r31, r1
 4b6:	f8 cf       	rjmp	.-16     	; 0x4a8 <__floatsisf+0x1c>
 4b8:	fa f4       	brpl	.+62     	; 0x4f8 <__floatsisf+0x6c>
 4ba:	bb 0f       	add	r27, r27
 4bc:	11 f4       	brne	.+4      	; 0x4c2 <__floatsisf+0x36>
 4be:	60 ff       	sbrs	r22, 0
 4c0:	1b c0       	rjmp	.+54     	; 0x4f8 <__floatsisf+0x6c>
 4c2:	6f 5f       	subi	r22, 0xFF	; 255
 4c4:	7f 4f       	sbci	r23, 0xFF	; 255
 4c6:	8f 4f       	sbci	r24, 0xFF	; 255
 4c8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ca:	16 c0       	rjmp	.+44     	; 0x4f8 <__floatsisf+0x6c>
 4cc:	88 23       	and	r24, r24
 4ce:	11 f0       	breq	.+4      	; 0x4d4 <__floatsisf+0x48>
 4d0:	96 e9       	ldi	r25, 0x96	; 150
 4d2:	11 c0       	rjmp	.+34     	; 0x4f6 <__floatsisf+0x6a>
 4d4:	77 23       	and	r23, r23
 4d6:	21 f0       	breq	.+8      	; 0x4e0 <__floatsisf+0x54>
 4d8:	9e e8       	ldi	r25, 0x8E	; 142
 4da:	87 2f       	mov	r24, r23
 4dc:	76 2f       	mov	r23, r22
 4de:	05 c0       	rjmp	.+10     	; 0x4ea <__floatsisf+0x5e>
 4e0:	66 23       	and	r22, r22
 4e2:	71 f0       	breq	.+28     	; 0x500 <__floatsisf+0x74>
 4e4:	96 e8       	ldi	r25, 0x86	; 134
 4e6:	86 2f       	mov	r24, r22
 4e8:	70 e0       	ldi	r23, 0x00	; 0
 4ea:	60 e0       	ldi	r22, 0x00	; 0
 4ec:	2a f0       	brmi	.+10     	; 0x4f8 <__floatsisf+0x6c>
 4ee:	9a 95       	dec	r25
 4f0:	66 0f       	add	r22, r22
 4f2:	77 1f       	adc	r23, r23
 4f4:	88 1f       	adc	r24, r24
 4f6:	da f7       	brpl	.-10     	; 0x4ee <__floatsisf+0x62>
 4f8:	88 0f       	add	r24, r24
 4fa:	96 95       	lsr	r25
 4fc:	87 95       	ror	r24
 4fe:	97 f9       	bld	r25, 7
 500:	08 95       	ret

00000502 <__fp_split3>:
 502:	57 fd       	sbrc	r21, 7
 504:	90 58       	subi	r25, 0x80	; 128
 506:	44 0f       	add	r20, r20
 508:	55 1f       	adc	r21, r21
 50a:	59 f0       	breq	.+22     	; 0x522 <__fp_splitA+0x10>
 50c:	5f 3f       	cpi	r21, 0xFF	; 255
 50e:	71 f0       	breq	.+28     	; 0x52c <__fp_splitA+0x1a>
 510:	47 95       	ror	r20

00000512 <__fp_splitA>:
 512:	88 0f       	add	r24, r24
 514:	97 fb       	bst	r25, 7
 516:	99 1f       	adc	r25, r25
 518:	61 f0       	breq	.+24     	; 0x532 <__fp_splitA+0x20>
 51a:	9f 3f       	cpi	r25, 0xFF	; 255
 51c:	79 f0       	breq	.+30     	; 0x53c <__fp_splitA+0x2a>
 51e:	87 95       	ror	r24
 520:	08 95       	ret
 522:	12 16       	cp	r1, r18
 524:	13 06       	cpc	r1, r19
 526:	14 06       	cpc	r1, r20
 528:	55 1f       	adc	r21, r21
 52a:	f2 cf       	rjmp	.-28     	; 0x510 <__fp_split3+0xe>
 52c:	46 95       	lsr	r20
 52e:	f1 df       	rcall	.-30     	; 0x512 <__fp_splitA>
 530:	08 c0       	rjmp	.+16     	; 0x542 <__fp_splitA+0x30>
 532:	16 16       	cp	r1, r22
 534:	17 06       	cpc	r1, r23
 536:	18 06       	cpc	r1, r24
 538:	99 1f       	adc	r25, r25
 53a:	f1 cf       	rjmp	.-30     	; 0x51e <__fp_splitA+0xc>
 53c:	86 95       	lsr	r24
 53e:	71 05       	cpc	r23, r1
 540:	61 05       	cpc	r22, r1
 542:	08 94       	sec
 544:	08 95       	ret

00000546 <__fp_zero>:
 546:	e8 94       	clt

00000548 <__fp_szero>:
 548:	bb 27       	eor	r27, r27
 54a:	66 27       	eor	r22, r22
 54c:	77 27       	eor	r23, r23
 54e:	cb 01       	movw	r24, r22
 550:	97 f9       	bld	r25, 7
 552:	08 95       	ret

00000554 <__mulsf3>:
 554:	0e 94 bd 02 	call	0x57a	; 0x57a <__mulsf3x>
 558:	0c 94 2e 03 	jmp	0x65c	; 0x65c <__fp_round>
 55c:	0e 94 20 03 	call	0x640	; 0x640 <__fp_pscA>
 560:	38 f0       	brcs	.+14     	; 0x570 <__mulsf3+0x1c>
 562:	0e 94 27 03 	call	0x64e	; 0x64e <__fp_pscB>
 566:	20 f0       	brcs	.+8      	; 0x570 <__mulsf3+0x1c>
 568:	95 23       	and	r25, r21
 56a:	11 f0       	breq	.+4      	; 0x570 <__mulsf3+0x1c>
 56c:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_inf>
 570:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__fp_nan>
 574:	11 24       	eor	r1, r1
 576:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_szero>

0000057a <__mulsf3x>:
 57a:	0e 94 81 02 	call	0x502	; 0x502 <__fp_split3>
 57e:	70 f3       	brcs	.-36     	; 0x55c <__mulsf3+0x8>

00000580 <__mulsf3_pse>:
 580:	95 9f       	mul	r25, r21
 582:	c1 f3       	breq	.-16     	; 0x574 <__mulsf3+0x20>
 584:	95 0f       	add	r25, r21
 586:	50 e0       	ldi	r21, 0x00	; 0
 588:	55 1f       	adc	r21, r21
 58a:	62 9f       	mul	r22, r18
 58c:	f0 01       	movw	r30, r0
 58e:	72 9f       	mul	r23, r18
 590:	bb 27       	eor	r27, r27
 592:	f0 0d       	add	r31, r0
 594:	b1 1d       	adc	r27, r1
 596:	63 9f       	mul	r22, r19
 598:	aa 27       	eor	r26, r26
 59a:	f0 0d       	add	r31, r0
 59c:	b1 1d       	adc	r27, r1
 59e:	aa 1f       	adc	r26, r26
 5a0:	64 9f       	mul	r22, r20
 5a2:	66 27       	eor	r22, r22
 5a4:	b0 0d       	add	r27, r0
 5a6:	a1 1d       	adc	r26, r1
 5a8:	66 1f       	adc	r22, r22
 5aa:	82 9f       	mul	r24, r18
 5ac:	22 27       	eor	r18, r18
 5ae:	b0 0d       	add	r27, r0
 5b0:	a1 1d       	adc	r26, r1
 5b2:	62 1f       	adc	r22, r18
 5b4:	73 9f       	mul	r23, r19
 5b6:	b0 0d       	add	r27, r0
 5b8:	a1 1d       	adc	r26, r1
 5ba:	62 1f       	adc	r22, r18
 5bc:	83 9f       	mul	r24, r19
 5be:	a0 0d       	add	r26, r0
 5c0:	61 1d       	adc	r22, r1
 5c2:	22 1f       	adc	r18, r18
 5c4:	74 9f       	mul	r23, r20
 5c6:	33 27       	eor	r19, r19
 5c8:	a0 0d       	add	r26, r0
 5ca:	61 1d       	adc	r22, r1
 5cc:	23 1f       	adc	r18, r19
 5ce:	84 9f       	mul	r24, r20
 5d0:	60 0d       	add	r22, r0
 5d2:	21 1d       	adc	r18, r1
 5d4:	82 2f       	mov	r24, r18
 5d6:	76 2f       	mov	r23, r22
 5d8:	6a 2f       	mov	r22, r26
 5da:	11 24       	eor	r1, r1
 5dc:	9f 57       	subi	r25, 0x7F	; 127
 5de:	50 40       	sbci	r21, 0x00	; 0
 5e0:	9a f0       	brmi	.+38     	; 0x608 <__mulsf3_pse+0x88>
 5e2:	f1 f0       	breq	.+60     	; 0x620 <__mulsf3_pse+0xa0>
 5e4:	88 23       	and	r24, r24
 5e6:	4a f0       	brmi	.+18     	; 0x5fa <__mulsf3_pse+0x7a>
 5e8:	ee 0f       	add	r30, r30
 5ea:	ff 1f       	adc	r31, r31
 5ec:	bb 1f       	adc	r27, r27
 5ee:	66 1f       	adc	r22, r22
 5f0:	77 1f       	adc	r23, r23
 5f2:	88 1f       	adc	r24, r24
 5f4:	91 50       	subi	r25, 0x01	; 1
 5f6:	50 40       	sbci	r21, 0x00	; 0
 5f8:	a9 f7       	brne	.-22     	; 0x5e4 <__mulsf3_pse+0x64>
 5fa:	9e 3f       	cpi	r25, 0xFE	; 254
 5fc:	51 05       	cpc	r21, r1
 5fe:	80 f0       	brcs	.+32     	; 0x620 <__mulsf3_pse+0xa0>
 600:	0c 94 17 03 	jmp	0x62e	; 0x62e <__fp_inf>
 604:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_szero>
 608:	5f 3f       	cpi	r21, 0xFF	; 255
 60a:	e4 f3       	brlt	.-8      	; 0x604 <__mulsf3_pse+0x84>
 60c:	98 3e       	cpi	r25, 0xE8	; 232
 60e:	d4 f3       	brlt	.-12     	; 0x604 <__mulsf3_pse+0x84>
 610:	86 95       	lsr	r24
 612:	77 95       	ror	r23
 614:	67 95       	ror	r22
 616:	b7 95       	ror	r27
 618:	f7 95       	ror	r31
 61a:	e7 95       	ror	r30
 61c:	9f 5f       	subi	r25, 0xFF	; 255
 61e:	c1 f7       	brne	.-16     	; 0x610 <__mulsf3_pse+0x90>
 620:	fe 2b       	or	r31, r30
 622:	88 0f       	add	r24, r24
 624:	91 1d       	adc	r25, r1
 626:	96 95       	lsr	r25
 628:	87 95       	ror	r24
 62a:	97 f9       	bld	r25, 7
 62c:	08 95       	ret

0000062e <__fp_inf>:
 62e:	97 f9       	bld	r25, 7
 630:	9f 67       	ori	r25, 0x7F	; 127
 632:	80 e8       	ldi	r24, 0x80	; 128
 634:	70 e0       	ldi	r23, 0x00	; 0
 636:	60 e0       	ldi	r22, 0x00	; 0
 638:	08 95       	ret

0000063a <__fp_nan>:
 63a:	9f ef       	ldi	r25, 0xFF	; 255
 63c:	80 ec       	ldi	r24, 0xC0	; 192
 63e:	08 95       	ret

00000640 <__fp_pscA>:
 640:	00 24       	eor	r0, r0
 642:	0a 94       	dec	r0
 644:	16 16       	cp	r1, r22
 646:	17 06       	cpc	r1, r23
 648:	18 06       	cpc	r1, r24
 64a:	09 06       	cpc	r0, r25
 64c:	08 95       	ret

0000064e <__fp_pscB>:
 64e:	00 24       	eor	r0, r0
 650:	0a 94       	dec	r0
 652:	12 16       	cp	r1, r18
 654:	13 06       	cpc	r1, r19
 656:	14 06       	cpc	r1, r20
 658:	05 06       	cpc	r0, r21
 65a:	08 95       	ret

0000065c <__fp_round>:
 65c:	09 2e       	mov	r0, r25
 65e:	03 94       	inc	r0
 660:	00 0c       	add	r0, r0
 662:	11 f4       	brne	.+4      	; 0x668 <__fp_round+0xc>
 664:	88 23       	and	r24, r24
 666:	52 f0       	brmi	.+20     	; 0x67c <__fp_round+0x20>
 668:	bb 0f       	add	r27, r27
 66a:	40 f4       	brcc	.+16     	; 0x67c <__fp_round+0x20>
 66c:	bf 2b       	or	r27, r31
 66e:	11 f4       	brne	.+4      	; 0x674 <__fp_round+0x18>
 670:	60 ff       	sbrs	r22, 0
 672:	04 c0       	rjmp	.+8      	; 0x67c <__fp_round+0x20>
 674:	6f 5f       	subi	r22, 0xFF	; 255
 676:	7f 4f       	sbci	r23, 0xFF	; 255
 678:	8f 4f       	sbci	r24, 0xFF	; 255
 67a:	9f 4f       	sbci	r25, 0xFF	; 255
 67c:	08 95       	ret

0000067e <__divmodhi4>:
 67e:	97 fb       	bst	r25, 7
 680:	07 2e       	mov	r0, r23
 682:	16 f4       	brtc	.+4      	; 0x688 <__divmodhi4+0xa>
 684:	00 94       	com	r0
 686:	07 d0       	rcall	.+14     	; 0x696 <__divmodhi4_neg1>
 688:	77 fd       	sbrc	r23, 7
 68a:	09 d0       	rcall	.+18     	; 0x69e <__divmodhi4_neg2>
 68c:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__udivmodhi4>
 690:	07 fc       	sbrc	r0, 7
 692:	05 d0       	rcall	.+10     	; 0x69e <__divmodhi4_neg2>
 694:	3e f4       	brtc	.+14     	; 0x6a4 <__divmodhi4_exit>

00000696 <__divmodhi4_neg1>:
 696:	90 95       	com	r25
 698:	81 95       	neg	r24
 69a:	9f 4f       	sbci	r25, 0xFF	; 255
 69c:	08 95       	ret

0000069e <__divmodhi4_neg2>:
 69e:	70 95       	com	r23
 6a0:	61 95       	neg	r22
 6a2:	7f 4f       	sbci	r23, 0xFF	; 255

000006a4 <__divmodhi4_exit>:
 6a4:	08 95       	ret

000006a6 <__udivmodhi4>:
 6a6:	aa 1b       	sub	r26, r26
 6a8:	bb 1b       	sub	r27, r27
 6aa:	51 e1       	ldi	r21, 0x11	; 17
 6ac:	07 c0       	rjmp	.+14     	; 0x6bc <__udivmodhi4_ep>

000006ae <__udivmodhi4_loop>:
 6ae:	aa 1f       	adc	r26, r26
 6b0:	bb 1f       	adc	r27, r27
 6b2:	a6 17       	cp	r26, r22
 6b4:	b7 07       	cpc	r27, r23
 6b6:	10 f0       	brcs	.+4      	; 0x6bc <__udivmodhi4_ep>
 6b8:	a6 1b       	sub	r26, r22
 6ba:	b7 0b       	sbc	r27, r23

000006bc <__udivmodhi4_ep>:
 6bc:	88 1f       	adc	r24, r24
 6be:	99 1f       	adc	r25, r25
 6c0:	5a 95       	dec	r21
 6c2:	a9 f7       	brne	.-22     	; 0x6ae <__udivmodhi4_loop>
 6c4:	80 95       	com	r24
 6c6:	90 95       	com	r25
 6c8:	bc 01       	movw	r22, r24
 6ca:	cd 01       	movw	r24, r26
 6cc:	08 95       	ret

000006ce <sprintf>:
 6ce:	ae e0       	ldi	r26, 0x0E	; 14
 6d0:	b0 e0       	ldi	r27, 0x00	; 0
 6d2:	ed e6       	ldi	r30, 0x6D	; 109
 6d4:	f3 e0       	ldi	r31, 0x03	; 3
 6d6:	0c 94 28 06 	jmp	0xc50	; 0xc50 <__prologue_saves__+0x1c>
 6da:	0d 89       	ldd	r16, Y+21	; 0x15
 6dc:	1e 89       	ldd	r17, Y+22	; 0x16
 6de:	86 e0       	ldi	r24, 0x06	; 6
 6e0:	8c 83       	std	Y+4, r24	; 0x04
 6e2:	1a 83       	std	Y+2, r17	; 0x02
 6e4:	09 83       	std	Y+1, r16	; 0x01
 6e6:	8f ef       	ldi	r24, 0xFF	; 255
 6e8:	9f e7       	ldi	r25, 0x7F	; 127
 6ea:	9e 83       	std	Y+6, r25	; 0x06
 6ec:	8d 83       	std	Y+5, r24	; 0x05
 6ee:	ae 01       	movw	r20, r28
 6f0:	47 5e       	subi	r20, 0xE7	; 231
 6f2:	5f 4f       	sbci	r21, 0xFF	; 255
 6f4:	6f 89       	ldd	r22, Y+23	; 0x17
 6f6:	78 8d       	ldd	r23, Y+24	; 0x18
 6f8:	ce 01       	movw	r24, r28
 6fa:	01 96       	adiw	r24, 0x01	; 1
 6fc:	0e 94 89 03 	call	0x712	; 0x712 <vfprintf>
 700:	ef 81       	ldd	r30, Y+7	; 0x07
 702:	f8 85       	ldd	r31, Y+8	; 0x08
 704:	e0 0f       	add	r30, r16
 706:	f1 1f       	adc	r31, r17
 708:	10 82       	st	Z, r1
 70a:	2e 96       	adiw	r28, 0x0e	; 14
 70c:	e4 e0       	ldi	r30, 0x04	; 4
 70e:	0c 94 44 06 	jmp	0xc88	; 0xc88 <__epilogue_restores__+0x1c>

00000712 <vfprintf>:
 712:	ab e0       	ldi	r26, 0x0B	; 11
 714:	b0 e0       	ldi	r27, 0x00	; 0
 716:	ef e8       	ldi	r30, 0x8F	; 143
 718:	f3 e0       	ldi	r31, 0x03	; 3
 71a:	0c 94 1a 06 	jmp	0xc34	; 0xc34 <__prologue_saves__>
 71e:	6c 01       	movw	r12, r24
 720:	7b 01       	movw	r14, r22
 722:	8a 01       	movw	r16, r20
 724:	fc 01       	movw	r30, r24
 726:	17 82       	std	Z+7, r1	; 0x07
 728:	16 82       	std	Z+6, r1	; 0x06
 72a:	83 81       	ldd	r24, Z+3	; 0x03
 72c:	81 ff       	sbrs	r24, 1
 72e:	cc c1       	rjmp	.+920    	; 0xac8 <vfprintf+0x3b6>
 730:	ce 01       	movw	r24, r28
 732:	01 96       	adiw	r24, 0x01	; 1
 734:	3c 01       	movw	r6, r24
 736:	f6 01       	movw	r30, r12
 738:	93 81       	ldd	r25, Z+3	; 0x03
 73a:	f7 01       	movw	r30, r14
 73c:	93 fd       	sbrc	r25, 3
 73e:	85 91       	lpm	r24, Z+
 740:	93 ff       	sbrs	r25, 3
 742:	81 91       	ld	r24, Z+
 744:	7f 01       	movw	r14, r30
 746:	88 23       	and	r24, r24
 748:	09 f4       	brne	.+2      	; 0x74c <vfprintf+0x3a>
 74a:	ba c1       	rjmp	.+884    	; 0xac0 <vfprintf+0x3ae>
 74c:	85 32       	cpi	r24, 0x25	; 37
 74e:	39 f4       	brne	.+14     	; 0x75e <vfprintf+0x4c>
 750:	93 fd       	sbrc	r25, 3
 752:	85 91       	lpm	r24, Z+
 754:	93 ff       	sbrs	r25, 3
 756:	81 91       	ld	r24, Z+
 758:	7f 01       	movw	r14, r30
 75a:	85 32       	cpi	r24, 0x25	; 37
 75c:	29 f4       	brne	.+10     	; 0x768 <vfprintf+0x56>
 75e:	b6 01       	movw	r22, r12
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 766:	e7 cf       	rjmp	.-50     	; 0x736 <vfprintf+0x24>
 768:	91 2c       	mov	r9, r1
 76a:	21 2c       	mov	r2, r1
 76c:	31 2c       	mov	r3, r1
 76e:	ff e1       	ldi	r31, 0x1F	; 31
 770:	f3 15       	cp	r31, r3
 772:	d8 f0       	brcs	.+54     	; 0x7aa <vfprintf+0x98>
 774:	8b 32       	cpi	r24, 0x2B	; 43
 776:	79 f0       	breq	.+30     	; 0x796 <vfprintf+0x84>
 778:	38 f4       	brcc	.+14     	; 0x788 <vfprintf+0x76>
 77a:	80 32       	cpi	r24, 0x20	; 32
 77c:	79 f0       	breq	.+30     	; 0x79c <vfprintf+0x8a>
 77e:	83 32       	cpi	r24, 0x23	; 35
 780:	a1 f4       	brne	.+40     	; 0x7aa <vfprintf+0x98>
 782:	23 2d       	mov	r18, r3
 784:	20 61       	ori	r18, 0x10	; 16
 786:	1d c0       	rjmp	.+58     	; 0x7c2 <vfprintf+0xb0>
 788:	8d 32       	cpi	r24, 0x2D	; 45
 78a:	61 f0       	breq	.+24     	; 0x7a4 <vfprintf+0x92>
 78c:	80 33       	cpi	r24, 0x30	; 48
 78e:	69 f4       	brne	.+26     	; 0x7aa <vfprintf+0x98>
 790:	23 2d       	mov	r18, r3
 792:	21 60       	ori	r18, 0x01	; 1
 794:	16 c0       	rjmp	.+44     	; 0x7c2 <vfprintf+0xb0>
 796:	83 2d       	mov	r24, r3
 798:	82 60       	ori	r24, 0x02	; 2
 79a:	38 2e       	mov	r3, r24
 79c:	e3 2d       	mov	r30, r3
 79e:	e4 60       	ori	r30, 0x04	; 4
 7a0:	3e 2e       	mov	r3, r30
 7a2:	2a c0       	rjmp	.+84     	; 0x7f8 <vfprintf+0xe6>
 7a4:	f3 2d       	mov	r31, r3
 7a6:	f8 60       	ori	r31, 0x08	; 8
 7a8:	1d c0       	rjmp	.+58     	; 0x7e4 <vfprintf+0xd2>
 7aa:	37 fc       	sbrc	r3, 7
 7ac:	2d c0       	rjmp	.+90     	; 0x808 <vfprintf+0xf6>
 7ae:	20 ed       	ldi	r18, 0xD0	; 208
 7b0:	28 0f       	add	r18, r24
 7b2:	2a 30       	cpi	r18, 0x0A	; 10
 7b4:	40 f0       	brcs	.+16     	; 0x7c6 <vfprintf+0xb4>
 7b6:	8e 32       	cpi	r24, 0x2E	; 46
 7b8:	b9 f4       	brne	.+46     	; 0x7e8 <vfprintf+0xd6>
 7ba:	36 fc       	sbrc	r3, 6
 7bc:	81 c1       	rjmp	.+770    	; 0xac0 <vfprintf+0x3ae>
 7be:	23 2d       	mov	r18, r3
 7c0:	20 64       	ori	r18, 0x40	; 64
 7c2:	32 2e       	mov	r3, r18
 7c4:	19 c0       	rjmp	.+50     	; 0x7f8 <vfprintf+0xe6>
 7c6:	36 fe       	sbrs	r3, 6
 7c8:	06 c0       	rjmp	.+12     	; 0x7d6 <vfprintf+0xc4>
 7ca:	8a e0       	ldi	r24, 0x0A	; 10
 7cc:	98 9e       	mul	r9, r24
 7ce:	20 0d       	add	r18, r0
 7d0:	11 24       	eor	r1, r1
 7d2:	92 2e       	mov	r9, r18
 7d4:	11 c0       	rjmp	.+34     	; 0x7f8 <vfprintf+0xe6>
 7d6:	ea e0       	ldi	r30, 0x0A	; 10
 7d8:	2e 9e       	mul	r2, r30
 7da:	20 0d       	add	r18, r0
 7dc:	11 24       	eor	r1, r1
 7de:	22 2e       	mov	r2, r18
 7e0:	f3 2d       	mov	r31, r3
 7e2:	f0 62       	ori	r31, 0x20	; 32
 7e4:	3f 2e       	mov	r3, r31
 7e6:	08 c0       	rjmp	.+16     	; 0x7f8 <vfprintf+0xe6>
 7e8:	8c 36       	cpi	r24, 0x6C	; 108
 7ea:	21 f4       	brne	.+8      	; 0x7f4 <vfprintf+0xe2>
 7ec:	83 2d       	mov	r24, r3
 7ee:	80 68       	ori	r24, 0x80	; 128
 7f0:	38 2e       	mov	r3, r24
 7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <vfprintf+0xe6>
 7f4:	88 36       	cpi	r24, 0x68	; 104
 7f6:	41 f4       	brne	.+16     	; 0x808 <vfprintf+0xf6>
 7f8:	f7 01       	movw	r30, r14
 7fa:	93 fd       	sbrc	r25, 3
 7fc:	85 91       	lpm	r24, Z+
 7fe:	93 ff       	sbrs	r25, 3
 800:	81 91       	ld	r24, Z+
 802:	7f 01       	movw	r14, r30
 804:	81 11       	cpse	r24, r1
 806:	b3 cf       	rjmp	.-154    	; 0x76e <vfprintf+0x5c>
 808:	98 2f       	mov	r25, r24
 80a:	9f 7d       	andi	r25, 0xDF	; 223
 80c:	95 54       	subi	r25, 0x45	; 69
 80e:	93 30       	cpi	r25, 0x03	; 3
 810:	28 f4       	brcc	.+10     	; 0x81c <vfprintf+0x10a>
 812:	0c 5f       	subi	r16, 0xFC	; 252
 814:	1f 4f       	sbci	r17, 0xFF	; 255
 816:	9f e3       	ldi	r25, 0x3F	; 63
 818:	99 83       	std	Y+1, r25	; 0x01
 81a:	0d c0       	rjmp	.+26     	; 0x836 <vfprintf+0x124>
 81c:	83 36       	cpi	r24, 0x63	; 99
 81e:	31 f0       	breq	.+12     	; 0x82c <vfprintf+0x11a>
 820:	83 37       	cpi	r24, 0x73	; 115
 822:	71 f0       	breq	.+28     	; 0x840 <vfprintf+0x12e>
 824:	83 35       	cpi	r24, 0x53	; 83
 826:	09 f0       	breq	.+2      	; 0x82a <vfprintf+0x118>
 828:	59 c0       	rjmp	.+178    	; 0x8dc <vfprintf+0x1ca>
 82a:	21 c0       	rjmp	.+66     	; 0x86e <vfprintf+0x15c>
 82c:	f8 01       	movw	r30, r16
 82e:	80 81       	ld	r24, Z
 830:	89 83       	std	Y+1, r24	; 0x01
 832:	0e 5f       	subi	r16, 0xFE	; 254
 834:	1f 4f       	sbci	r17, 0xFF	; 255
 836:	88 24       	eor	r8, r8
 838:	83 94       	inc	r8
 83a:	91 2c       	mov	r9, r1
 83c:	53 01       	movw	r10, r6
 83e:	13 c0       	rjmp	.+38     	; 0x866 <vfprintf+0x154>
 840:	28 01       	movw	r4, r16
 842:	f2 e0       	ldi	r31, 0x02	; 2
 844:	4f 0e       	add	r4, r31
 846:	51 1c       	adc	r5, r1
 848:	f8 01       	movw	r30, r16
 84a:	a0 80       	ld	r10, Z
 84c:	b1 80       	ldd	r11, Z+1	; 0x01
 84e:	36 fe       	sbrs	r3, 6
 850:	03 c0       	rjmp	.+6      	; 0x858 <vfprintf+0x146>
 852:	69 2d       	mov	r22, r9
 854:	70 e0       	ldi	r23, 0x00	; 0
 856:	02 c0       	rjmp	.+4      	; 0x85c <vfprintf+0x14a>
 858:	6f ef       	ldi	r22, 0xFF	; 255
 85a:	7f ef       	ldi	r23, 0xFF	; 255
 85c:	c5 01       	movw	r24, r10
 85e:	0e 94 75 05 	call	0xaea	; 0xaea <strnlen>
 862:	4c 01       	movw	r8, r24
 864:	82 01       	movw	r16, r4
 866:	f3 2d       	mov	r31, r3
 868:	ff 77       	andi	r31, 0x7F	; 127
 86a:	3f 2e       	mov	r3, r31
 86c:	16 c0       	rjmp	.+44     	; 0x89a <vfprintf+0x188>
 86e:	28 01       	movw	r4, r16
 870:	22 e0       	ldi	r18, 0x02	; 2
 872:	42 0e       	add	r4, r18
 874:	51 1c       	adc	r5, r1
 876:	f8 01       	movw	r30, r16
 878:	a0 80       	ld	r10, Z
 87a:	b1 80       	ldd	r11, Z+1	; 0x01
 87c:	36 fe       	sbrs	r3, 6
 87e:	03 c0       	rjmp	.+6      	; 0x886 <vfprintf+0x174>
 880:	69 2d       	mov	r22, r9
 882:	70 e0       	ldi	r23, 0x00	; 0
 884:	02 c0       	rjmp	.+4      	; 0x88a <vfprintf+0x178>
 886:	6f ef       	ldi	r22, 0xFF	; 255
 888:	7f ef       	ldi	r23, 0xFF	; 255
 88a:	c5 01       	movw	r24, r10
 88c:	0e 94 6a 05 	call	0xad4	; 0xad4 <strnlen_P>
 890:	4c 01       	movw	r8, r24
 892:	f3 2d       	mov	r31, r3
 894:	f0 68       	ori	r31, 0x80	; 128
 896:	3f 2e       	mov	r3, r31
 898:	82 01       	movw	r16, r4
 89a:	33 fc       	sbrc	r3, 3
 89c:	1b c0       	rjmp	.+54     	; 0x8d4 <vfprintf+0x1c2>
 89e:	82 2d       	mov	r24, r2
 8a0:	90 e0       	ldi	r25, 0x00	; 0
 8a2:	88 16       	cp	r8, r24
 8a4:	99 06       	cpc	r9, r25
 8a6:	b0 f4       	brcc	.+44     	; 0x8d4 <vfprintf+0x1c2>
 8a8:	b6 01       	movw	r22, r12
 8aa:	80 e2       	ldi	r24, 0x20	; 32
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 8b2:	2a 94       	dec	r2
 8b4:	f4 cf       	rjmp	.-24     	; 0x89e <vfprintf+0x18c>
 8b6:	f5 01       	movw	r30, r10
 8b8:	37 fc       	sbrc	r3, 7
 8ba:	85 91       	lpm	r24, Z+
 8bc:	37 fe       	sbrs	r3, 7
 8be:	81 91       	ld	r24, Z+
 8c0:	5f 01       	movw	r10, r30
 8c2:	b6 01       	movw	r22, r12
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 8ca:	21 10       	cpse	r2, r1
 8cc:	2a 94       	dec	r2
 8ce:	21 e0       	ldi	r18, 0x01	; 1
 8d0:	82 1a       	sub	r8, r18
 8d2:	91 08       	sbc	r9, r1
 8d4:	81 14       	cp	r8, r1
 8d6:	91 04       	cpc	r9, r1
 8d8:	71 f7       	brne	.-36     	; 0x8b6 <vfprintf+0x1a4>
 8da:	e8 c0       	rjmp	.+464    	; 0xaac <vfprintf+0x39a>
 8dc:	84 36       	cpi	r24, 0x64	; 100
 8de:	11 f0       	breq	.+4      	; 0x8e4 <vfprintf+0x1d2>
 8e0:	89 36       	cpi	r24, 0x69	; 105
 8e2:	41 f5       	brne	.+80     	; 0x934 <vfprintf+0x222>
 8e4:	f8 01       	movw	r30, r16
 8e6:	37 fe       	sbrs	r3, 7
 8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <vfprintf+0x1e6>
 8ea:	60 81       	ld	r22, Z
 8ec:	71 81       	ldd	r23, Z+1	; 0x01
 8ee:	82 81       	ldd	r24, Z+2	; 0x02
 8f0:	93 81       	ldd	r25, Z+3	; 0x03
 8f2:	0c 5f       	subi	r16, 0xFC	; 252
 8f4:	1f 4f       	sbci	r17, 0xFF	; 255
 8f6:	08 c0       	rjmp	.+16     	; 0x908 <vfprintf+0x1f6>
 8f8:	60 81       	ld	r22, Z
 8fa:	71 81       	ldd	r23, Z+1	; 0x01
 8fc:	07 2e       	mov	r0, r23
 8fe:	00 0c       	add	r0, r0
 900:	88 0b       	sbc	r24, r24
 902:	99 0b       	sbc	r25, r25
 904:	0e 5f       	subi	r16, 0xFE	; 254
 906:	1f 4f       	sbci	r17, 0xFF	; 255
 908:	f3 2d       	mov	r31, r3
 90a:	ff 76       	andi	r31, 0x6F	; 111
 90c:	3f 2e       	mov	r3, r31
 90e:	97 ff       	sbrs	r25, 7
 910:	09 c0       	rjmp	.+18     	; 0x924 <vfprintf+0x212>
 912:	90 95       	com	r25
 914:	80 95       	com	r24
 916:	70 95       	com	r23
 918:	61 95       	neg	r22
 91a:	7f 4f       	sbci	r23, 0xFF	; 255
 91c:	8f 4f       	sbci	r24, 0xFF	; 255
 91e:	9f 4f       	sbci	r25, 0xFF	; 255
 920:	f0 68       	ori	r31, 0x80	; 128
 922:	3f 2e       	mov	r3, r31
 924:	2a e0       	ldi	r18, 0x0A	; 10
 926:	30 e0       	ldi	r19, 0x00	; 0
 928:	a3 01       	movw	r20, r6
 92a:	0e 94 bc 05 	call	0xb78	; 0xb78 <__ultoa_invert>
 92e:	88 2e       	mov	r8, r24
 930:	86 18       	sub	r8, r6
 932:	45 c0       	rjmp	.+138    	; 0x9be <vfprintf+0x2ac>
 934:	85 37       	cpi	r24, 0x75	; 117
 936:	31 f4       	brne	.+12     	; 0x944 <vfprintf+0x232>
 938:	23 2d       	mov	r18, r3
 93a:	2f 7e       	andi	r18, 0xEF	; 239
 93c:	b2 2e       	mov	r11, r18
 93e:	2a e0       	ldi	r18, 0x0A	; 10
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	25 c0       	rjmp	.+74     	; 0x98e <vfprintf+0x27c>
 944:	93 2d       	mov	r25, r3
 946:	99 7f       	andi	r25, 0xF9	; 249
 948:	b9 2e       	mov	r11, r25
 94a:	8f 36       	cpi	r24, 0x6F	; 111
 94c:	c1 f0       	breq	.+48     	; 0x97e <vfprintf+0x26c>
 94e:	18 f4       	brcc	.+6      	; 0x956 <vfprintf+0x244>
 950:	88 35       	cpi	r24, 0x58	; 88
 952:	79 f0       	breq	.+30     	; 0x972 <vfprintf+0x260>
 954:	b5 c0       	rjmp	.+362    	; 0xac0 <vfprintf+0x3ae>
 956:	80 37       	cpi	r24, 0x70	; 112
 958:	19 f0       	breq	.+6      	; 0x960 <vfprintf+0x24e>
 95a:	88 37       	cpi	r24, 0x78	; 120
 95c:	21 f0       	breq	.+8      	; 0x966 <vfprintf+0x254>
 95e:	b0 c0       	rjmp	.+352    	; 0xac0 <vfprintf+0x3ae>
 960:	e9 2f       	mov	r30, r25
 962:	e0 61       	ori	r30, 0x10	; 16
 964:	be 2e       	mov	r11, r30
 966:	b4 fe       	sbrs	r11, 4
 968:	0d c0       	rjmp	.+26     	; 0x984 <vfprintf+0x272>
 96a:	fb 2d       	mov	r31, r11
 96c:	f4 60       	ori	r31, 0x04	; 4
 96e:	bf 2e       	mov	r11, r31
 970:	09 c0       	rjmp	.+18     	; 0x984 <vfprintf+0x272>
 972:	34 fe       	sbrs	r3, 4
 974:	0a c0       	rjmp	.+20     	; 0x98a <vfprintf+0x278>
 976:	29 2f       	mov	r18, r25
 978:	26 60       	ori	r18, 0x06	; 6
 97a:	b2 2e       	mov	r11, r18
 97c:	06 c0       	rjmp	.+12     	; 0x98a <vfprintf+0x278>
 97e:	28 e0       	ldi	r18, 0x08	; 8
 980:	30 e0       	ldi	r19, 0x00	; 0
 982:	05 c0       	rjmp	.+10     	; 0x98e <vfprintf+0x27c>
 984:	20 e1       	ldi	r18, 0x10	; 16
 986:	30 e0       	ldi	r19, 0x00	; 0
 988:	02 c0       	rjmp	.+4      	; 0x98e <vfprintf+0x27c>
 98a:	20 e1       	ldi	r18, 0x10	; 16
 98c:	32 e0       	ldi	r19, 0x02	; 2
 98e:	f8 01       	movw	r30, r16
 990:	b7 fe       	sbrs	r11, 7
 992:	07 c0       	rjmp	.+14     	; 0x9a2 <vfprintf+0x290>
 994:	60 81       	ld	r22, Z
 996:	71 81       	ldd	r23, Z+1	; 0x01
 998:	82 81       	ldd	r24, Z+2	; 0x02
 99a:	93 81       	ldd	r25, Z+3	; 0x03
 99c:	0c 5f       	subi	r16, 0xFC	; 252
 99e:	1f 4f       	sbci	r17, 0xFF	; 255
 9a0:	06 c0       	rjmp	.+12     	; 0x9ae <vfprintf+0x29c>
 9a2:	60 81       	ld	r22, Z
 9a4:	71 81       	ldd	r23, Z+1	; 0x01
 9a6:	80 e0       	ldi	r24, 0x00	; 0
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	0e 5f       	subi	r16, 0xFE	; 254
 9ac:	1f 4f       	sbci	r17, 0xFF	; 255
 9ae:	a3 01       	movw	r20, r6
 9b0:	0e 94 bc 05 	call	0xb78	; 0xb78 <__ultoa_invert>
 9b4:	88 2e       	mov	r8, r24
 9b6:	86 18       	sub	r8, r6
 9b8:	fb 2d       	mov	r31, r11
 9ba:	ff 77       	andi	r31, 0x7F	; 127
 9bc:	3f 2e       	mov	r3, r31
 9be:	36 fe       	sbrs	r3, 6
 9c0:	0d c0       	rjmp	.+26     	; 0x9dc <vfprintf+0x2ca>
 9c2:	23 2d       	mov	r18, r3
 9c4:	2e 7f       	andi	r18, 0xFE	; 254
 9c6:	a2 2e       	mov	r10, r18
 9c8:	89 14       	cp	r8, r9
 9ca:	58 f4       	brcc	.+22     	; 0x9e2 <vfprintf+0x2d0>
 9cc:	34 fe       	sbrs	r3, 4
 9ce:	0b c0       	rjmp	.+22     	; 0x9e6 <vfprintf+0x2d4>
 9d0:	32 fc       	sbrc	r3, 2
 9d2:	09 c0       	rjmp	.+18     	; 0x9e6 <vfprintf+0x2d4>
 9d4:	83 2d       	mov	r24, r3
 9d6:	8e 7e       	andi	r24, 0xEE	; 238
 9d8:	a8 2e       	mov	r10, r24
 9da:	05 c0       	rjmp	.+10     	; 0x9e6 <vfprintf+0x2d4>
 9dc:	b8 2c       	mov	r11, r8
 9de:	a3 2c       	mov	r10, r3
 9e0:	03 c0       	rjmp	.+6      	; 0x9e8 <vfprintf+0x2d6>
 9e2:	b8 2c       	mov	r11, r8
 9e4:	01 c0       	rjmp	.+2      	; 0x9e8 <vfprintf+0x2d6>
 9e6:	b9 2c       	mov	r11, r9
 9e8:	a4 fe       	sbrs	r10, 4
 9ea:	0f c0       	rjmp	.+30     	; 0xa0a <vfprintf+0x2f8>
 9ec:	fe 01       	movw	r30, r28
 9ee:	e8 0d       	add	r30, r8
 9f0:	f1 1d       	adc	r31, r1
 9f2:	80 81       	ld	r24, Z
 9f4:	80 33       	cpi	r24, 0x30	; 48
 9f6:	21 f4       	brne	.+8      	; 0xa00 <vfprintf+0x2ee>
 9f8:	9a 2d       	mov	r25, r10
 9fa:	99 7e       	andi	r25, 0xE9	; 233
 9fc:	a9 2e       	mov	r10, r25
 9fe:	09 c0       	rjmp	.+18     	; 0xa12 <vfprintf+0x300>
 a00:	a2 fe       	sbrs	r10, 2
 a02:	06 c0       	rjmp	.+12     	; 0xa10 <vfprintf+0x2fe>
 a04:	b3 94       	inc	r11
 a06:	b3 94       	inc	r11
 a08:	04 c0       	rjmp	.+8      	; 0xa12 <vfprintf+0x300>
 a0a:	8a 2d       	mov	r24, r10
 a0c:	86 78       	andi	r24, 0x86	; 134
 a0e:	09 f0       	breq	.+2      	; 0xa12 <vfprintf+0x300>
 a10:	b3 94       	inc	r11
 a12:	a3 fc       	sbrc	r10, 3
 a14:	11 c0       	rjmp	.+34     	; 0xa38 <vfprintf+0x326>
 a16:	a0 fe       	sbrs	r10, 0
 a18:	06 c0       	rjmp	.+12     	; 0xa26 <vfprintf+0x314>
 a1a:	b2 14       	cp	r11, r2
 a1c:	88 f4       	brcc	.+34     	; 0xa40 <vfprintf+0x32e>
 a1e:	28 0c       	add	r2, r8
 a20:	92 2c       	mov	r9, r2
 a22:	9b 18       	sub	r9, r11
 a24:	0e c0       	rjmp	.+28     	; 0xa42 <vfprintf+0x330>
 a26:	b2 14       	cp	r11, r2
 a28:	60 f4       	brcc	.+24     	; 0xa42 <vfprintf+0x330>
 a2a:	b6 01       	movw	r22, r12
 a2c:	80 e2       	ldi	r24, 0x20	; 32
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 a34:	b3 94       	inc	r11
 a36:	f7 cf       	rjmp	.-18     	; 0xa26 <vfprintf+0x314>
 a38:	b2 14       	cp	r11, r2
 a3a:	18 f4       	brcc	.+6      	; 0xa42 <vfprintf+0x330>
 a3c:	2b 18       	sub	r2, r11
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <vfprintf+0x332>
 a40:	98 2c       	mov	r9, r8
 a42:	21 2c       	mov	r2, r1
 a44:	a4 fe       	sbrs	r10, 4
 a46:	10 c0       	rjmp	.+32     	; 0xa68 <vfprintf+0x356>
 a48:	b6 01       	movw	r22, r12
 a4a:	80 e3       	ldi	r24, 0x30	; 48
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 a52:	a2 fe       	sbrs	r10, 2
 a54:	17 c0       	rjmp	.+46     	; 0xa84 <vfprintf+0x372>
 a56:	a1 fc       	sbrc	r10, 1
 a58:	03 c0       	rjmp	.+6      	; 0xa60 <vfprintf+0x34e>
 a5a:	88 e7       	ldi	r24, 0x78	; 120
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	02 c0       	rjmp	.+4      	; 0xa64 <vfprintf+0x352>
 a60:	88 e5       	ldi	r24, 0x58	; 88
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	b6 01       	movw	r22, r12
 a66:	0c c0       	rjmp	.+24     	; 0xa80 <vfprintf+0x36e>
 a68:	8a 2d       	mov	r24, r10
 a6a:	86 78       	andi	r24, 0x86	; 134
 a6c:	59 f0       	breq	.+22     	; 0xa84 <vfprintf+0x372>
 a6e:	a1 fe       	sbrs	r10, 1
 a70:	02 c0       	rjmp	.+4      	; 0xa76 <vfprintf+0x364>
 a72:	8b e2       	ldi	r24, 0x2B	; 43
 a74:	01 c0       	rjmp	.+2      	; 0xa78 <vfprintf+0x366>
 a76:	80 e2       	ldi	r24, 0x20	; 32
 a78:	a7 fc       	sbrc	r10, 7
 a7a:	8d e2       	ldi	r24, 0x2D	; 45
 a7c:	b6 01       	movw	r22, r12
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 a84:	89 14       	cp	r8, r9
 a86:	38 f4       	brcc	.+14     	; 0xa96 <vfprintf+0x384>
 a88:	b6 01       	movw	r22, r12
 a8a:	80 e3       	ldi	r24, 0x30	; 48
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 a92:	9a 94       	dec	r9
 a94:	f7 cf       	rjmp	.-18     	; 0xa84 <vfprintf+0x372>
 a96:	8a 94       	dec	r8
 a98:	f3 01       	movw	r30, r6
 a9a:	e8 0d       	add	r30, r8
 a9c:	f1 1d       	adc	r31, r1
 a9e:	80 81       	ld	r24, Z
 aa0:	b6 01       	movw	r22, r12
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 aa8:	81 10       	cpse	r8, r1
 aaa:	f5 cf       	rjmp	.-22     	; 0xa96 <vfprintf+0x384>
 aac:	22 20       	and	r2, r2
 aae:	09 f4       	brne	.+2      	; 0xab2 <vfprintf+0x3a0>
 ab0:	42 ce       	rjmp	.-892    	; 0x736 <vfprintf+0x24>
 ab2:	b6 01       	movw	r22, r12
 ab4:	80 e2       	ldi	r24, 0x20	; 32
 ab6:	90 e0       	ldi	r25, 0x00	; 0
 ab8:	0e 94 80 05 	call	0xb00	; 0xb00 <fputc>
 abc:	2a 94       	dec	r2
 abe:	f6 cf       	rjmp	.-20     	; 0xaac <vfprintf+0x39a>
 ac0:	f6 01       	movw	r30, r12
 ac2:	86 81       	ldd	r24, Z+6	; 0x06
 ac4:	97 81       	ldd	r25, Z+7	; 0x07
 ac6:	02 c0       	rjmp	.+4      	; 0xacc <vfprintf+0x3ba>
 ac8:	8f ef       	ldi	r24, 0xFF	; 255
 aca:	9f ef       	ldi	r25, 0xFF	; 255
 acc:	2b 96       	adiw	r28, 0x0b	; 11
 ace:	e2 e1       	ldi	r30, 0x12	; 18
 ad0:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__epilogue_restores__>

00000ad4 <strnlen_P>:
 ad4:	fc 01       	movw	r30, r24
 ad6:	05 90       	lpm	r0, Z+
 ad8:	61 50       	subi	r22, 0x01	; 1
 ada:	70 40       	sbci	r23, 0x00	; 0
 adc:	01 10       	cpse	r0, r1
 ade:	d8 f7       	brcc	.-10     	; 0xad6 <strnlen_P+0x2>
 ae0:	80 95       	com	r24
 ae2:	90 95       	com	r25
 ae4:	8e 0f       	add	r24, r30
 ae6:	9f 1f       	adc	r25, r31
 ae8:	08 95       	ret

00000aea <strnlen>:
 aea:	fc 01       	movw	r30, r24
 aec:	61 50       	subi	r22, 0x01	; 1
 aee:	70 40       	sbci	r23, 0x00	; 0
 af0:	01 90       	ld	r0, Z+
 af2:	01 10       	cpse	r0, r1
 af4:	d8 f7       	brcc	.-10     	; 0xaec <strnlen+0x2>
 af6:	80 95       	com	r24
 af8:	90 95       	com	r25
 afa:	8e 0f       	add	r24, r30
 afc:	9f 1f       	adc	r25, r31
 afe:	08 95       	ret

00000b00 <fputc>:
 b00:	0f 93       	push	r16
 b02:	1f 93       	push	r17
 b04:	cf 93       	push	r28
 b06:	df 93       	push	r29
 b08:	fb 01       	movw	r30, r22
 b0a:	23 81       	ldd	r18, Z+3	; 0x03
 b0c:	21 fd       	sbrc	r18, 1
 b0e:	03 c0       	rjmp	.+6      	; 0xb16 <fputc+0x16>
 b10:	8f ef       	ldi	r24, 0xFF	; 255
 b12:	9f ef       	ldi	r25, 0xFF	; 255
 b14:	2c c0       	rjmp	.+88     	; 0xb6e <fputc+0x6e>
 b16:	22 ff       	sbrs	r18, 2
 b18:	16 c0       	rjmp	.+44     	; 0xb46 <fputc+0x46>
 b1a:	46 81       	ldd	r20, Z+6	; 0x06
 b1c:	57 81       	ldd	r21, Z+7	; 0x07
 b1e:	24 81       	ldd	r18, Z+4	; 0x04
 b20:	35 81       	ldd	r19, Z+5	; 0x05
 b22:	42 17       	cp	r20, r18
 b24:	53 07       	cpc	r21, r19
 b26:	44 f4       	brge	.+16     	; 0xb38 <fputc+0x38>
 b28:	a0 81       	ld	r26, Z
 b2a:	b1 81       	ldd	r27, Z+1	; 0x01
 b2c:	9d 01       	movw	r18, r26
 b2e:	2f 5f       	subi	r18, 0xFF	; 255
 b30:	3f 4f       	sbci	r19, 0xFF	; 255
 b32:	31 83       	std	Z+1, r19	; 0x01
 b34:	20 83       	st	Z, r18
 b36:	8c 93       	st	X, r24
 b38:	26 81       	ldd	r18, Z+6	; 0x06
 b3a:	37 81       	ldd	r19, Z+7	; 0x07
 b3c:	2f 5f       	subi	r18, 0xFF	; 255
 b3e:	3f 4f       	sbci	r19, 0xFF	; 255
 b40:	37 83       	std	Z+7, r19	; 0x07
 b42:	26 83       	std	Z+6, r18	; 0x06
 b44:	14 c0       	rjmp	.+40     	; 0xb6e <fputc+0x6e>
 b46:	8b 01       	movw	r16, r22
 b48:	ec 01       	movw	r28, r24
 b4a:	fb 01       	movw	r30, r22
 b4c:	00 84       	ldd	r0, Z+8	; 0x08
 b4e:	f1 85       	ldd	r31, Z+9	; 0x09
 b50:	e0 2d       	mov	r30, r0
 b52:	09 95       	icall
 b54:	89 2b       	or	r24, r25
 b56:	e1 f6       	brne	.-72     	; 0xb10 <fputc+0x10>
 b58:	d8 01       	movw	r26, r16
 b5a:	16 96       	adiw	r26, 0x06	; 6
 b5c:	8d 91       	ld	r24, X+
 b5e:	9c 91       	ld	r25, X
 b60:	17 97       	sbiw	r26, 0x07	; 7
 b62:	01 96       	adiw	r24, 0x01	; 1
 b64:	17 96       	adiw	r26, 0x07	; 7
 b66:	9c 93       	st	X, r25
 b68:	8e 93       	st	-X, r24
 b6a:	16 97       	sbiw	r26, 0x06	; 6
 b6c:	ce 01       	movw	r24, r28
 b6e:	df 91       	pop	r29
 b70:	cf 91       	pop	r28
 b72:	1f 91       	pop	r17
 b74:	0f 91       	pop	r16
 b76:	08 95       	ret

00000b78 <__ultoa_invert>:
 b78:	fa 01       	movw	r30, r20
 b7a:	aa 27       	eor	r26, r26
 b7c:	28 30       	cpi	r18, 0x08	; 8
 b7e:	51 f1       	breq	.+84     	; 0xbd4 <__ultoa_invert+0x5c>
 b80:	20 31       	cpi	r18, 0x10	; 16
 b82:	81 f1       	breq	.+96     	; 0xbe4 <__ultoa_invert+0x6c>
 b84:	e8 94       	clt
 b86:	6f 93       	push	r22
 b88:	6e 7f       	andi	r22, 0xFE	; 254
 b8a:	6e 5f       	subi	r22, 0xFE	; 254
 b8c:	7f 4f       	sbci	r23, 0xFF	; 255
 b8e:	8f 4f       	sbci	r24, 0xFF	; 255
 b90:	9f 4f       	sbci	r25, 0xFF	; 255
 b92:	af 4f       	sbci	r26, 0xFF	; 255
 b94:	b1 e0       	ldi	r27, 0x01	; 1
 b96:	3e d0       	rcall	.+124    	; 0xc14 <__ultoa_invert+0x9c>
 b98:	b4 e0       	ldi	r27, 0x04	; 4
 b9a:	3c d0       	rcall	.+120    	; 0xc14 <__ultoa_invert+0x9c>
 b9c:	67 0f       	add	r22, r23
 b9e:	78 1f       	adc	r23, r24
 ba0:	89 1f       	adc	r24, r25
 ba2:	9a 1f       	adc	r25, r26
 ba4:	a1 1d       	adc	r26, r1
 ba6:	68 0f       	add	r22, r24
 ba8:	79 1f       	adc	r23, r25
 baa:	8a 1f       	adc	r24, r26
 bac:	91 1d       	adc	r25, r1
 bae:	a1 1d       	adc	r26, r1
 bb0:	6a 0f       	add	r22, r26
 bb2:	71 1d       	adc	r23, r1
 bb4:	81 1d       	adc	r24, r1
 bb6:	91 1d       	adc	r25, r1
 bb8:	a1 1d       	adc	r26, r1
 bba:	20 d0       	rcall	.+64     	; 0xbfc <__ultoa_invert+0x84>
 bbc:	09 f4       	brne	.+2      	; 0xbc0 <__ultoa_invert+0x48>
 bbe:	68 94       	set
 bc0:	3f 91       	pop	r19
 bc2:	2a e0       	ldi	r18, 0x0A	; 10
 bc4:	26 9f       	mul	r18, r22
 bc6:	11 24       	eor	r1, r1
 bc8:	30 19       	sub	r19, r0
 bca:	30 5d       	subi	r19, 0xD0	; 208
 bcc:	31 93       	st	Z+, r19
 bce:	de f6       	brtc	.-74     	; 0xb86 <__ultoa_invert+0xe>
 bd0:	cf 01       	movw	r24, r30
 bd2:	08 95       	ret
 bd4:	46 2f       	mov	r20, r22
 bd6:	47 70       	andi	r20, 0x07	; 7
 bd8:	40 5d       	subi	r20, 0xD0	; 208
 bda:	41 93       	st	Z+, r20
 bdc:	b3 e0       	ldi	r27, 0x03	; 3
 bde:	0f d0       	rcall	.+30     	; 0xbfe <__ultoa_invert+0x86>
 be0:	c9 f7       	brne	.-14     	; 0xbd4 <__ultoa_invert+0x5c>
 be2:	f6 cf       	rjmp	.-20     	; 0xbd0 <__ultoa_invert+0x58>
 be4:	46 2f       	mov	r20, r22
 be6:	4f 70       	andi	r20, 0x0F	; 15
 be8:	40 5d       	subi	r20, 0xD0	; 208
 bea:	4a 33       	cpi	r20, 0x3A	; 58
 bec:	18 f0       	brcs	.+6      	; 0xbf4 <__ultoa_invert+0x7c>
 bee:	49 5d       	subi	r20, 0xD9	; 217
 bf0:	31 fd       	sbrc	r19, 1
 bf2:	40 52       	subi	r20, 0x20	; 32
 bf4:	41 93       	st	Z+, r20
 bf6:	02 d0       	rcall	.+4      	; 0xbfc <__ultoa_invert+0x84>
 bf8:	a9 f7       	brne	.-22     	; 0xbe4 <__ultoa_invert+0x6c>
 bfa:	ea cf       	rjmp	.-44     	; 0xbd0 <__ultoa_invert+0x58>
 bfc:	b4 e0       	ldi	r27, 0x04	; 4
 bfe:	a6 95       	lsr	r26
 c00:	97 95       	ror	r25
 c02:	87 95       	ror	r24
 c04:	77 95       	ror	r23
 c06:	67 95       	ror	r22
 c08:	ba 95       	dec	r27
 c0a:	c9 f7       	brne	.-14     	; 0xbfe <__ultoa_invert+0x86>
 c0c:	00 97       	sbiw	r24, 0x00	; 0
 c0e:	61 05       	cpc	r22, r1
 c10:	71 05       	cpc	r23, r1
 c12:	08 95       	ret
 c14:	9b 01       	movw	r18, r22
 c16:	ac 01       	movw	r20, r24
 c18:	0a 2e       	mov	r0, r26
 c1a:	06 94       	lsr	r0
 c1c:	57 95       	ror	r21
 c1e:	47 95       	ror	r20
 c20:	37 95       	ror	r19
 c22:	27 95       	ror	r18
 c24:	ba 95       	dec	r27
 c26:	c9 f7       	brne	.-14     	; 0xc1a <__ultoa_invert+0xa2>
 c28:	62 0f       	add	r22, r18
 c2a:	73 1f       	adc	r23, r19
 c2c:	84 1f       	adc	r24, r20
 c2e:	95 1f       	adc	r25, r21
 c30:	a0 1d       	adc	r26, r0
 c32:	08 95       	ret

00000c34 <__prologue_saves__>:
 c34:	2f 92       	push	r2
 c36:	3f 92       	push	r3
 c38:	4f 92       	push	r4
 c3a:	5f 92       	push	r5
 c3c:	6f 92       	push	r6
 c3e:	7f 92       	push	r7
 c40:	8f 92       	push	r8
 c42:	9f 92       	push	r9
 c44:	af 92       	push	r10
 c46:	bf 92       	push	r11
 c48:	cf 92       	push	r12
 c4a:	df 92       	push	r13
 c4c:	ef 92       	push	r14
 c4e:	ff 92       	push	r15
 c50:	0f 93       	push	r16
 c52:	1f 93       	push	r17
 c54:	cf 93       	push	r28
 c56:	df 93       	push	r29
 c58:	cd b7       	in	r28, 0x3d	; 61
 c5a:	de b7       	in	r29, 0x3e	; 62
 c5c:	ca 1b       	sub	r28, r26
 c5e:	db 0b       	sbc	r29, r27
 c60:	0f b6       	in	r0, 0x3f	; 63
 c62:	f8 94       	cli
 c64:	de bf       	out	0x3e, r29	; 62
 c66:	0f be       	out	0x3f, r0	; 63
 c68:	cd bf       	out	0x3d, r28	; 61
 c6a:	09 94       	ijmp

00000c6c <__epilogue_restores__>:
 c6c:	2a 88       	ldd	r2, Y+18	; 0x12
 c6e:	39 88       	ldd	r3, Y+17	; 0x11
 c70:	48 88       	ldd	r4, Y+16	; 0x10
 c72:	5f 84       	ldd	r5, Y+15	; 0x0f
 c74:	6e 84       	ldd	r6, Y+14	; 0x0e
 c76:	7d 84       	ldd	r7, Y+13	; 0x0d
 c78:	8c 84       	ldd	r8, Y+12	; 0x0c
 c7a:	9b 84       	ldd	r9, Y+11	; 0x0b
 c7c:	aa 84       	ldd	r10, Y+10	; 0x0a
 c7e:	b9 84       	ldd	r11, Y+9	; 0x09
 c80:	c8 84       	ldd	r12, Y+8	; 0x08
 c82:	df 80       	ldd	r13, Y+7	; 0x07
 c84:	ee 80       	ldd	r14, Y+6	; 0x06
 c86:	fd 80       	ldd	r15, Y+5	; 0x05
 c88:	0c 81       	ldd	r16, Y+4	; 0x04
 c8a:	1b 81       	ldd	r17, Y+3	; 0x03
 c8c:	aa 81       	ldd	r26, Y+2	; 0x02
 c8e:	b9 81       	ldd	r27, Y+1	; 0x01
 c90:	ce 0f       	add	r28, r30
 c92:	d1 1d       	adc	r29, r1
 c94:	0f b6       	in	r0, 0x3f	; 63
 c96:	f8 94       	cli
 c98:	de bf       	out	0x3e, r29	; 62
 c9a:	0f be       	out	0x3f, r0	; 63
 c9c:	cd bf       	out	0x3d, r28	; 61
 c9e:	ed 01       	movw	r28, r26
 ca0:	08 95       	ret

00000ca2 <_exit>:
 ca2:	f8 94       	cli

00000ca4 <__stop_program>:
 ca4:	ff cf       	rjmp	.-2      	; 0xca4 <__stop_program>
