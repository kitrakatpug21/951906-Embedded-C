
Keypad Interface.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002f4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000064  00800060  000002f4  00000368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003cc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bc9  00000000  00000000  00000478  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000671  00000000  00000000  00001041  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000466  00000000  00000000  000016b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  00001b18  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000366  00000000  00000000  00001b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003f7  00000000  00000000  00001eee  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000022e5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ef       	ldi	r30, 0xF4	; 244
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 3c       	cpi	r26, 0xC4	; 196
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <main>
  7a:	0c 94 78 01 	jmp	0x2f0	; 0x2f0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_config>:

#define LCD_PORT PORTD
#define LCD_DDR  DDRD

void LCD_config(uint8_t cmd){
	LCD_PORT &= ~(0b00000001);// RS = 0
  82:	92 b3       	in	r25, 0x12	; 18
  84:	9e 7f       	andi	r25, 0xFE	; 254
  86:	92 bb       	out	0x12, r25	; 18
	LCD_PORT = (LCD_PORT & 0x0F) | (cmd & 0xF0);
  88:	92 b3       	in	r25, 0x12	; 18
  8a:	9f 70       	andi	r25, 0x0F	; 15
  8c:	28 2f       	mov	r18, r24
  8e:	20 7f       	andi	r18, 0xF0	; 240
  90:	92 2b       	or	r25, r18
  92:	92 bb       	out	0x12, r25	; 18
	LCD_PORT |= (0b00000010); // EN = 1
  94:	92 b3       	in	r25, 0x12	; 18
  96:	92 60       	ori	r25, 0x02	; 2
  98:	92 bb       	out	0x12, r25	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	ef e1       	ldi	r30, 0x1F	; 31
  9c:	fe e4       	ldi	r31, 0x4E	; 78
  9e:	31 97       	sbiw	r30, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <LCD_config+0x1c>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <LCD_config+0x22>
  a4:	00 00       	nop
	_delay_ms(10);
	LCD_PORT &= ~(0b00000010); // EN = 0
  a6:	92 b3       	in	r25, 0x12	; 18
  a8:	9d 7f       	andi	r25, 0xFD	; 253
  aa:	92 bb       	out	0x12, r25	; 18
  ac:	ef e1       	ldi	r30, 0x1F	; 31
  ae:	fe e4       	ldi	r31, 0x4E	; 78
  b0:	31 97       	sbiw	r30, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <LCD_config+0x2e>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <LCD_config+0x34>
  b6:	00 00       	nop
	_delay_ms(10);
	// END OF UPPER NIBBLE (4bit) OF COMMAND
	LCD_PORT &= ~(0b00000001);// RS = 0
  b8:	92 b3       	in	r25, 0x12	; 18
  ba:	9e 7f       	andi	r25, 0xFE	; 254
  bc:	92 bb       	out	0x12, r25	; 18
	LCD_PORT = (LCD_PORT & 0x0F) | ((cmd<<4) & 0xF0);
  be:	22 b3       	in	r18, 0x12	; 18
  c0:	f0 e1       	ldi	r31, 0x10	; 16
  c2:	8f 9f       	mul	r24, r31
  c4:	c0 01       	movw	r24, r0
  c6:	11 24       	eor	r1, r1
  c8:	92 2f       	mov	r25, r18
  ca:	9f 70       	andi	r25, 0x0F	; 15
  cc:	89 2b       	or	r24, r25
  ce:	82 bb       	out	0x12, r24	; 18
	LCD_PORT |= (0b00000010); // EN = 1
  d0:	82 b3       	in	r24, 0x12	; 18
  d2:	82 60       	ori	r24, 0x02	; 2
  d4:	82 bb       	out	0x12, r24	; 18
  d6:	8f e1       	ldi	r24, 0x1F	; 31
  d8:	9e e4       	ldi	r25, 0x4E	; 78
  da:	01 97       	sbiw	r24, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <LCD_config+0x58>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <LCD_config+0x5e>
  e0:	00 00       	nop
	_delay_ms(10);
	LCD_PORT &= ~(0b00000010); // EN = 0
  e2:	82 b3       	in	r24, 0x12	; 18
  e4:	8d 7f       	andi	r24, 0xFD	; 253
  e6:	82 bb       	out	0x12, r24	; 18
  e8:	ef e1       	ldi	r30, 0x1F	; 31
  ea:	fe e4       	ldi	r31, 0x4E	; 78
  ec:	31 97       	sbiw	r30, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <LCD_config+0x6a>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <LCD_config+0x70>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <LCD_char>:
	_delay_ms(10);
	// END OF LOWER NIBBLE (4bit) OF COMMAND
}
void LCD_char(char data){
	LCD_PORT |= (0b00000001);// RS = 1
  f6:	92 b3       	in	r25, 0x12	; 18
  f8:	91 60       	ori	r25, 0x01	; 1
  fa:	92 bb       	out	0x12, r25	; 18
	LCD_PORT = (LCD_PORT & 0x0F) | (data & 0xF0);
  fc:	92 b3       	in	r25, 0x12	; 18
  fe:	9f 70       	andi	r25, 0x0F	; 15
 100:	28 2f       	mov	r18, r24
 102:	20 7f       	andi	r18, 0xF0	; 240
 104:	92 2b       	or	r25, r18
 106:	92 bb       	out	0x12, r25	; 18
	LCD_PORT |= (0b00000010); // EN = 1
 108:	92 b3       	in	r25, 0x12	; 18
 10a:	92 60       	ori	r25, 0x02	; 2
 10c:	92 bb       	out	0x12, r25	; 18
 10e:	ef e1       	ldi	r30, 0x1F	; 31
 110:	fe e4       	ldi	r31, 0x4E	; 78
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <LCD_char+0x1c>
 116:	00 c0       	rjmp	.+0      	; 0x118 <LCD_char+0x22>
 118:	00 00       	nop
	_delay_ms(10);
	LCD_PORT &= ~(0b00000010); // EN = 0
 11a:	92 b3       	in	r25, 0x12	; 18
 11c:	9d 7f       	andi	r25, 0xFD	; 253
 11e:	92 bb       	out	0x12, r25	; 18
 120:	ef e1       	ldi	r30, 0x1F	; 31
 122:	fe e4       	ldi	r31, 0x4E	; 78
 124:	31 97       	sbiw	r30, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <LCD_char+0x2e>
 128:	00 c0       	rjmp	.+0      	; 0x12a <LCD_char+0x34>
 12a:	00 00       	nop
	_delay_ms(10);
	// END OF UPPER NIBBLE (4bit) OF DATA
	LCD_PORT |= (0b00000001);// RS = 1
 12c:	92 b3       	in	r25, 0x12	; 18
 12e:	91 60       	ori	r25, 0x01	; 1
 130:	92 bb       	out	0x12, r25	; 18
	LCD_PORT = (LCD_PORT & 0x0F) | ((data<<4) & 0xF0);
 132:	22 b3       	in	r18, 0x12	; 18
 134:	f0 e1       	ldi	r31, 0x10	; 16
 136:	8f 9f       	mul	r24, r31
 138:	c0 01       	movw	r24, r0
 13a:	11 24       	eor	r1, r1
 13c:	92 2f       	mov	r25, r18
 13e:	9f 70       	andi	r25, 0x0F	; 15
 140:	89 2b       	or	r24, r25
 142:	82 bb       	out	0x12, r24	; 18
	LCD_PORT |= (0b00000010); // EN = 1
 144:	82 b3       	in	r24, 0x12	; 18
 146:	82 60       	ori	r24, 0x02	; 2
 148:	82 bb       	out	0x12, r24	; 18
 14a:	8f e1       	ldi	r24, 0x1F	; 31
 14c:	9e e4       	ldi	r25, 0x4E	; 78
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <LCD_char+0x58>
 152:	00 c0       	rjmp	.+0      	; 0x154 <LCD_char+0x5e>
 154:	00 00       	nop
	_delay_ms(10);
	LCD_PORT &= ~(0b00000010); // EN = 0
 156:	82 b3       	in	r24, 0x12	; 18
 158:	8d 7f       	andi	r24, 0xFD	; 253
 15a:	82 bb       	out	0x12, r24	; 18
 15c:	ef e1       	ldi	r30, 0x1F	; 31
 15e:	fe e4       	ldi	r31, 0x4E	; 78
 160:	31 97       	sbiw	r30, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <LCD_char+0x6a>
 164:	00 c0       	rjmp	.+0      	; 0x166 <LCD_char+0x70>
 166:	00 00       	nop
 168:	08 95       	ret

0000016a <LCD_initiate>:
	_delay_ms(10);
	// END OF LOWER NIBBLE (4bit) OF DATA
}
void LCD_initiate(){
	LCD_DDR = 0b11110011;//Setup the DDR Register
 16a:	83 ef       	ldi	r24, 0xF3	; 243
 16c:	81 bb       	out	0x11, r24	; 17
 16e:	2f ef       	ldi	r18, 0xFF	; 255
 170:	82 e5       	ldi	r24, 0x52	; 82
 172:	97 e0       	ldi	r25, 0x07	; 7
 174:	21 50       	subi	r18, 0x01	; 1
 176:	80 40       	sbci	r24, 0x00	; 0
 178:	90 40       	sbci	r25, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <LCD_initiate+0xa>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <LCD_initiate+0x14>
 17e:	00 00       	nop
	_delay_ms(300);
	//LCD_config(0x38);// 8 bit mode
	LCD_config(0x33);LCD_config(0x32); // to sync the UPPER PORT OF LCDs and turn off LOWER PORT
 180:	83 e3       	ldi	r24, 0x33	; 51
 182:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 186:	82 e3       	ldi	r24, 0x32	; 50
 188:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
	LCD_config(0x28);// 4-bit 16 character 2 row mode
 18c:	88 e2       	ldi	r24, 0x28	; 40
 18e:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
	LCD_config(0x0C);
 192:	8c e0       	ldi	r24, 0x0C	; 12
 194:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
	LCD_config(0x01);
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 19e:	8f ec       	ldi	r24, 0xCF	; 207
 1a0:	97 e0       	ldi	r25, 0x07	; 7
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <LCD_initiate+0x38>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <LCD_initiate+0x3e>
 1a8:	00 00       	nop
	_delay_ms(1);
	LCD_config(0x06);
 1aa:	86 e0       	ldi	r24, 0x06	; 6
 1ac:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
	LCD_config(0x80);
 1b0:	80 e8       	ldi	r24, 0x80	; 128
 1b2:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 1b6:	08 95       	ret

000001b8 <LCD_print>:
}

void LCD_print(char *str)
{
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	ec 01       	movw	r28, r24
	while (*str != '\0')
 1be:	03 c0       	rjmp	.+6      	; 0x1c6 <LCD_print+0xe>
	{
		LCD_char(*str);
 1c0:	0e 94 7b 00 	call	0xf6	; 0xf6 <LCD_char>
		str++;
 1c4:	21 96       	adiw	r28, 0x01	; 1
	LCD_config(0x80);
}

void LCD_print(char *str)
{
	while (*str != '\0')
 1c6:	88 81       	ld	r24, Y
 1c8:	81 11       	cpse	r24, r1
 1ca:	fa cf       	rjmp	.-12     	; 0x1c0 <LCD_print+0x8>
	{
		LCD_char(*str);
		str++;
	}
}
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <main>:
#include <util/delay.h>
#include "LCD_4BIT.h"

int main(void)
{
    DDRA = 0b00001111; // KEYPAD
 1d2:	8f e0       	ldi	r24, 0x0F	; 15
 1d4:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0b00001111; // LED
 1d6:	84 bb       	out	0x14, r24	; 20
	LCD_initiate();
 1d8:	0e 94 b5 00 	call	0x16a	; 0x16a <LCD_initiate>
	while (1) 
    {
		PORTA = 0b00000001; // +5V on PA0 (1,2,3)
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
 1e0:	cc 9b       	sbis	0x19, 4	; 25
 1e2:	09 c0       	rjmp	.+18     	; 0x1f6 <main+0x24>
		{
			PORTC = 0b00000001; // Button-1 is Pressed
 1e4:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 1");
 1e6:	80 e8       	ldi	r24, 0x80	; 128
 1e8:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 1ec:	80 e6       	ldi	r24, 0x60	; 96
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 1f4:	17 c0       	rjmp	.+46     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
		}
		else if (PINA & 0b00100000)
 1f6:	cd 9b       	sbis	0x19, 5	; 25
 1f8:	0a c0       	rjmp	.+20     	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
		{
			PORTC = 0b00000010; // Button-2 is Pressed
 1fa:	82 e0       	ldi	r24, 0x02	; 2
 1fc:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 2");
 1fe:	80 e8       	ldi	r24, 0x80	; 128
 200:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 204:	8b e6       	ldi	r24, 0x6B	; 107
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 20c:	0b c0       	rjmp	.+22     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
		}
		else if (PINA & 0b01000000)
 20e:	ce 9b       	sbis	0x19, 6	; 25
 210:	09 c0       	rjmp	.+18     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
		{
			PORTC = 0b00000011; // Button-3 is Pressed
 212:	83 e0       	ldi	r24, 0x03	; 3
 214:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 3");
 216:	80 e8       	ldi	r24, 0x80	; 128
 218:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 21c:	86 e7       	ldi	r24, 0x76	; 118
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 224:	2f ef       	ldi	r18, 0xFF	; 255
 226:	80 e7       	ldi	r24, 0x70	; 112
 228:	92 e0       	ldi	r25, 0x02	; 2
 22a:	21 50       	subi	r18, 0x01	; 1
 22c:	80 40       	sbci	r24, 0x00	; 0
 22e:	90 40       	sbci	r25, 0x00	; 0
 230:	e1 f7       	brne	.-8      	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
 232:	00 c0       	rjmp	.+0      	; 0x234 <__EEPROM_REGION_LENGTH__+0x34>
 234:	00 00       	nop
		}
		
		_delay_ms(100);
		
		PORTA = 0b00000010; // +5V on PA1 (4,5,6)
 236:	82 e0       	ldi	r24, 0x02	; 2
 238:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
 23a:	cc 9b       	sbis	0x19, 4	; 25
 23c:	0a c0       	rjmp	.+20     	; 0x252 <__EEPROM_REGION_LENGTH__+0x52>
		{
			PORTC = 0b00000100; // Button-4 is Pressed
 23e:	84 e0       	ldi	r24, 0x04	; 4
 240:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 4");
 242:	80 e8       	ldi	r24, 0x80	; 128
 244:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 248:	81 e8       	ldi	r24, 0x81	; 129
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 250:	17 c0       	rjmp	.+46     	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
		}
		else if (PINA & 0b00100000)
 252:	cd 9b       	sbis	0x19, 5	; 25
 254:	0a c0       	rjmp	.+20     	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
		{
			PORTC = 0b00000101; // Button-5 is Pressed
 256:	85 e0       	ldi	r24, 0x05	; 5
 258:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 5");
 25a:	80 e8       	ldi	r24, 0x80	; 128
 25c:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 260:	8c e8       	ldi	r24, 0x8C	; 140
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 268:	0b c0       	rjmp	.+22     	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
		}
		else if (PINA & 0b01000000)
 26a:	ce 9b       	sbis	0x19, 6	; 25
 26c:	09 c0       	rjmp	.+18     	; 0x280 <__EEPROM_REGION_LENGTH__+0x80>
		{
			PORTC = 0b00000110; // Button-6 is Pressed
 26e:	86 e0       	ldi	r24, 0x06	; 6
 270:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 6");
 272:	80 e8       	ldi	r24, 0x80	; 128
 274:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 278:	87 e9       	ldi	r24, 0x97	; 151
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 280:	2f ef       	ldi	r18, 0xFF	; 255
 282:	80 e7       	ldi	r24, 0x70	; 112
 284:	92 e0       	ldi	r25, 0x02	; 2
 286:	21 50       	subi	r18, 0x01	; 1
 288:	80 40       	sbci	r24, 0x00	; 0
 28a:	90 40       	sbci	r25, 0x00	; 0
 28c:	e1 f7       	brne	.-8      	; 0x286 <__EEPROM_REGION_LENGTH__+0x86>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <__EEPROM_REGION_LENGTH__+0x90>
 290:	00 00       	nop
		}
		
		_delay_ms(100);
		
		PORTA = 0b00000100; // +5V on PA2 (7,8,9)
 292:	84 e0       	ldi	r24, 0x04	; 4
 294:	8b bb       	out	0x1b, r24	; 27
		if (PINA & 0b00010000)
 296:	cc 9b       	sbis	0x19, 4	; 25
 298:	0a c0       	rjmp	.+20     	; 0x2ae <__EEPROM_REGION_LENGTH__+0xae>
		{
			PORTC = 0b00000111; // Button-7 is Pressed
 29a:	87 e0       	ldi	r24, 0x07	; 7
 29c:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 7");
 29e:	80 e8       	ldi	r24, 0x80	; 128
 2a0:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 2a4:	82 ea       	ldi	r24, 0xA2	; 162
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 2ac:	17 c0       	rjmp	.+46     	; 0x2dc <__EEPROM_REGION_LENGTH__+0xdc>
		}
		else if (PINA & 0b00100000)
 2ae:	cd 9b       	sbis	0x19, 5	; 25
 2b0:	0a c0       	rjmp	.+20     	; 0x2c6 <__EEPROM_REGION_LENGTH__+0xc6>
		{
			PORTC = 0b00001000; // Button-8 is Pressed
 2b2:	88 e0       	ldi	r24, 0x08	; 8
 2b4:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 8");
 2b6:	80 e8       	ldi	r24, 0x80	; 128
 2b8:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 2bc:	8d ea       	ldi	r24, 0xAD	; 173
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 2c4:	0b c0       	rjmp	.+22     	; 0x2dc <__EEPROM_REGION_LENGTH__+0xdc>
		}
		else if (PINA & 0b01000000)
 2c6:	ce 9b       	sbis	0x19, 6	; 25
 2c8:	09 c0       	rjmp	.+18     	; 0x2dc <__EEPROM_REGION_LENGTH__+0xdc>
		{
			PORTC = 0b00001001; // Button-9 is Pressed
 2ca:	89 e0       	ldi	r24, 0x09	; 9
 2cc:	85 bb       	out	0x15, r24	; 21
			LCD_config(0x80);LCD_print("Button - 9");
 2ce:	80 e8       	ldi	r24, 0x80	; 128
 2d0:	0e 94 41 00 	call	0x82	; 0x82 <LCD_config>
 2d4:	88 eb       	ldi	r24, 0xB8	; 184
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <LCD_print>
 2dc:	2f ef       	ldi	r18, 0xFF	; 255
 2de:	80 e7       	ldi	r24, 0x70	; 112
 2e0:	92 e0       	ldi	r25, 0x02	; 2
 2e2:	21 50       	subi	r18, 0x01	; 1
 2e4:	80 40       	sbci	r24, 0x00	; 0
 2e6:	90 40       	sbci	r25, 0x00	; 0
 2e8:	e1 f7       	brne	.-8      	; 0x2e2 <__EEPROM_REGION_LENGTH__+0xe2>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <__EEPROM_REGION_LENGTH__+0xec>
 2ec:	00 00       	nop
 2ee:	76 cf       	rjmp	.-276    	; 0x1dc <main+0xa>

000002f0 <_exit>:
 2f0:	f8 94       	cli

000002f2 <__stop_program>:
 2f2:	ff cf       	rjmp	.-2      	; 0x2f2 <__stop_program>
